AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS GenAI IDP Accelerator (uksb-r8evguc4p9) (SO9027) (v0.3.17)
Mappings:
  AppSyncLogLevelMap:
    DEBUG:
      FieldLogLevel: ALL
    INFO:
      FieldLogLevel: ALL
    WARN:
      FieldLogLevel: ERROR
    ERROR:
      FieldLogLevel: ERROR
    CRITICAL:
      FieldLogLevel: ERROR
  CrawlerScheduleMap:
    Manual:
      ScheduleExpression: ''
    Every15m:
      ScheduleExpression: cron(0/15 * * * ? *)
    EveryHour:
      ScheduleExpression: cron(0 * * * ? *)
    EveryDay:
      ScheduleExpression: cron(0 0 * * ? *)
  Pattern1ConfigurationMap:
    lending-package-sample:
      ConfigPath: lending-package-sample
    default:
      ConfigPath: lending-package-sample
  Pattern2ConfigurationMap:
    lending-package-sample:
      ConfigPath: lending-package-sample
    rvl-cdip-package-sample:
      ConfigPath: rvl-cdip-package-sample
    rvl-cdip-package-sample-with-few-shot-examples:
      ConfigPath: rvl-cdip-package-sample-with-few-shot-examples
    bank-statement-sample:
      ConfigPath: bank-statement-sample
    default:
      ConfigPath: rvl-cdip-package-sample
  Pattern3ConfigurationMap:
    rvl-cdip-package-sample:
      ConfigPath: rvl-cdip-package-sample
    default:
      ConfigPath: rvl-cdip-package-sample
Parameters:
  AdminEmail:
    Type: String
    Description: Email address of the admin user (e.g. jdoe+admin@example.com).  An
      initial temporary password is automatically sent to this user via email.
    AllowedPattern: ^[\w.+-]+@([\w-]+\.)+[\w-]{2,6}$
  AllowedSignUpEmailDomain:
    Type: String
    Default: ''
    Description: Email address domain (example.com) or comma separated list of email
      domains (example1.com, example2.com) allowed to signup using the web UI. If
      left empty, signup via the web UI is disabled and users will have to be created
      using Cognito.
    AllowedPattern: ^(|([\w-]+\.)+[\w-]{2,6}(, *([\w-]+\.)+[\w-]{2,6})*)$
    ConstraintDescription: Must be empty or a list of comma separated email domains
      (example1.com, example2.com)
  IDPPattern:
    Type: String
    Default: Pattern1 - Packet or Media processing with Bedrock Data Automation (BDA)
    AllowedValues:
    - Pattern1 - Packet or Media processing with Bedrock Data Automation (BDA)
    - Pattern2 - Packet processing with Textract and Bedrock
    - Pattern3 - Packet processing with Textract, SageMaker(UDOP), and Bedrock
    Description: Built-in IDP workflow patterns - see README for pattern descriptions.
  CustomConfigPath:
    Type: String
    Default: ''
    Description: S3 URI pointing to your custom configuration YAML file. When provided,
      this configuration overrides the selected pattern preset and applies to all
      processing patterns.  Leave blank to use the selected pattern configuration
      preset. For example s3://my-bucket/custom-config/config.yaml
    AllowedPattern: ^(|s3://[a-zA-Z0-9.\\-_]+(/.*)?)$
    ConstraintDescription: Must be empty or a valid S3 URI (e.g., s3://my-bucket/custom-config/config.yaml)
  Pattern1BDAProjectArn:
    Type: String
    Default: ''
    AllowedPattern: ^(|^arn:aws[a-z-]*:bedrock:[a-z0-9-]+:.+:data-automation-project/.+)$
    Description: For Pattern-1, provide a Bedrock Data Automation (BDA) project ARN,
      or leave blank to create a sample project for processing the sample lending
      package.
  Pattern1Configuration:
    Type: String
    Default: lending-package-sample
    AllowedValues:
    - lending-package-sample
    - default
    Description: 'Select the configuration preset for Pattern 1. Each configuration
      contains pre-tuned settings for specific document processing scenarios - see
      https://github.com/aws-samples/sample-genai-idp/blob/main/config_library/README.md.
      Note: This selected configuration will be replaced by the Custom Configuration
      Path if specified.'
  Pattern2Configuration:
    Type: String
    Default: lending-package-sample
    AllowedValues:
    - lending-package-sample
    - rvl-cdip-package-sample
    - rvl-cdip-package-sample-with-few-shot-examples
    - bank-statement-sample
    - default
    Description: 'Select the configuration preset for Pattern 2. Each configuration
      contains pre-tuned settings for specific document processing scenarios see https://github.com/aws-samples/sample-genai-idp/blob/main/config_library/README.md.
      Note: Custom configuration overrides the selected pattern configuration when
      provided.'
  Pattern2CustomClassificationModelARN:
    Type: String
    Default: ''
    Description: Specify Custom Fine Tuned Classification Model ARN. Leave blank to
      use pretrained model specified in the selected configuration.
  Pattern2CustomExtractionModelARN:
    Type: String
    Default: ''
    Description: Specify Custom Fine Tuned Extraction Model ARN. Leave blank to use
      pretrained model specified in the selected configuration.
  Pattern3UDOPModelArtifactPath:
    Type: String
    Default: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/udop-finetuning/rvl-cdip/model.tar.gz
    AllowedPattern: ^(|s3://.*)$
    Description: For Pattern-3, provide S3 path to the UDOP model.tar.gz file (e.g.,
      s3://bucket-name/path/to/model.tar.gz)
  Pattern3Configuration:
    Type: String
    Default: rvl-cdip-package-sample
    AllowedValues:
    - rvl-cdip-package-sample
    - default
    Description: 'Select the configuration preset for Pattern 3. Each configuration
      contains pre-tuned settings for specific document processing scenarios - see
      https://github.com/aws-samples/sample-genai-idp/blob/main/config_library/README.md.
      Note: Custom configuration overrides the selected pattern configuration when
      provided.'
  EnableHITL:
    Type: String
    AllowedValues:
    - true
    - false
    Default: false
    Description: Enable Human In The Loop configuration to invoke HITL (SageMaker
      A2I) if the extraction confidence is less than configured threshold (applies
      to Pattern-1)
  ExistingPrivateWorkforceArn:
    Type: String
    Default: ''
    AllowedPattern: ^(|arn:aws[a-z-]*:sagemaker:[a-z0-9-]+:[0-9]{12}:workteam/private-crowd/.+)$
    Description: 'ARN of an existing SageMaker private workforce workteam to use for
      Human In The Loop (HITL).  If you do not have existing Private workteam and
      leave it blank then solution will create one.  REQUIRED when deploying multiple
      patterns with HITL enabled, as only one private workteam can exist per AWS account.
      If you already have a GenAI-IDP deployment with HITL enabled, provide the existing
      workteam ARN here. Leave empty for first-time HITL deployment to create a new
      private workteam automatically. Find the ARN in your existing stack''s CloudFormation
      outputs under ''PrivateWorkteamArn''. Format: arn:${AWS::Partition}:sagemaker:region:account-id:workteam/private-crowd/workteam-name'
  EvaluationBaselineBucketName:
    Type: String
    Default: ''
    Description: '(Optional) Existing bucket used for baseline (ground truth) data
      for processed documents. Baseline data is used to asess the accuracy  of the
      processing pattern outputs.  Provide the name of an existing bucket here. Hint:
      you can use the Output bucket of another GenAIIDP stack to compare the outputs
      from  different patterns and prompts.  Leave blank to automatically create an
      empty bucket where you can (optionally) place your validated baseline data later.'
  ReportingBucketName:
    Type: String
    Default: ''
    Description: (Optional) Existing bucket used for analytics. (Currently used for
      evaluation analytics) Provide the name of an existing bucket here or leave blank
      to automatically create a new bucket.
  DocumentSectionsCrawlerFrequency:
    Type: String
    Default: EveryDay
    AllowedValues:
    - Manual
    - Every15m
    - EveryHour
    - EveryDay
    Description: Frequency for the Glue Crawler to run and discover new document section
      tables and partitions. Manual requires manual execution, other options run automatically
      at the specified interval.
  EvaluationAutoEnabled:
    Type: String
    Default: true
    AllowedValues:
    - true
    - false
    Description: If true, an evaluation is automatically attempted for each processed
      document (if the EvaluationBaselineBucket contains baseline data for the document).
      Set to true during test cycles to evaluate and compare accuracy for different
      patterns and prompts for each document. If false, evaluation is not automatically
      attempted for each processed document. Set to false when deployed in production.
  DocumentKnowledgeBase:
    Default: BEDROCK_KNOWLEDGE_BASE (Create)
    Type: String
    AllowedValues:
    - DISABLED
    - BEDROCK_KNOWLEDGE_BASE (Create)
    Description: Use document processing results as knowledge base content. Model
      access for amazon.titan-embed-text-v2:0 MUST be enabled in Amazon Bedrock.
  KnowledgeBaseVectorStore:
    Type: String
    Default: OPENSEARCH_SERVERLESS
    AllowedValues:
    - OPENSEARCH_SERVERLESS
    - S3_VECTORS
    Description: Choose vector store type for Bedrock Knowledge Base. OpenSearch Serverless
      (default) for sub-millisecond queries, S3 Vectors for cost-effective storage
      with sub-second latency.
  KnowledgeBaseModelId:
    Type: String
    Default: us.amazon.nova-pro-v1:0
    AllowedValues:
    - us.amazon.nova-lite-v1:0
    - us.amazon.nova-pro-v1:0
    - us.amazon.nova-premier-v1:0
    - us.anthropic.claude-3-haiku-20240307-v1:0
    - us.anthropic.claude-3-5-haiku-20241022-v1:0
    - us.anthropic.claude-3-5-sonnet-20241022-v2:0
    - us.anthropic.claude-3-7-sonnet-20250219-v1:0
    Description: Model to use for optional Document Knowledge Base. Model access MUST
      be enabled in Amazon Bedrock.
  DocumentAnalysisAgentModelId:
    Type: String
    Default: us.anthropic.claude-3-7-sonnet-20250219-v1:0
    AllowedValues:
    - us.amazon.nova-lite-v1:0
    - us.amazon.nova-pro-v1:0
    - us.amazon.nova-premier-v1:0
    - us.anthropic.claude-3-haiku-20240307-v1:0
    - us.anthropic.claude-3-5-haiku-20241022-v1:0
    - us.anthropic.claude-3-5-sonnet-20241022-v2:0
    - us.anthropic.claude-3-7-sonnet-20250219-v1:0
    - us.anthropic.claude-sonnet-4-20250514-v1:0
    Description: Model to use for Document Analysis Agent (analytics queries). Model
      access MUST be enabled in Amazon Bedrock.
  PostProcessingLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: ^(|arn:aws[a-z-]*:lambda:.*)$
    Description: '(Optional) The specified Lambda function is invoked by EventBridge
      after the document processing workflow is processed. This function can implement
      custom logic to initiate downstream processing on the output of the processing
      pattern.

      '
  BedrockGuardrailId:
    Type: String
    Default: ''
    AllowedPattern: ^(|[a-z0-9]+)$
    Description: 'Optionally provide the *Id* (not name) of an *existing* Bedrock
      Guardrail (looks like: wxyz3ab12x34) to be used for all Bedrock and Bedrock
      Knowledge Base interactions.

      '
  BedrockGuardrailVersion:
    Type: String
    Default: DRAFT
    AllowedPattern: ^(|(([1-9][0-9]{0,7})|(DRAFT)))$
    Description: 'If you provided a Bedrock Guardrail Id above, provide the corresponding
      Guardrail version here (e.g. DRAFT|1|2|...).

      '
  MaxConcurrentWorkflows:
    Type: Number
    Default: 100
    Description: Maximum number of concurrent workflow executions allowed
    MinValue: 1
  DataRetentionInDays:
    Type: Number
    Default: 365
    Description: Number of days to retain documents (S3) and tracking records (DynamoDB)
    MinValue: 1
  ErrorThreshold:
    Type: Number
    Default: 1
    Description: Number of workflow errors that triggers an alert (per 5 minutes)
    MinValue: 1
  ExecutionTimeThresholdMs:
    Type: Number
    Default: 300000
    Description: Maximum acceptable execution time in milliseconds before alerting
      (default 300000 = 300 seconds)
    MinValue: 1000
  PermissionsBoundaryArn:
    Type: String
    Default: ''
    Description: '(Optional) ARN of an existing IAM Permissions Boundary policy to
      attach to all IAM roles. Required by some organizations with Service Control
      Policies (SCPs). Format: arn:${AWS::Partition}:iam::account-id:policy/policy-name
      Leave blank if no Permissions Boundary is required.'
    AllowedPattern: ^(|arn:aws[a-z-]*:iam::[0-9]{12}:policy/.+)$
    ConstraintDescription: Must be empty or a valid IAM policy ARN
  LogLevel:
    Type: String
    Default: INFO
    AllowedValues:
    - DEBUG
    - INFO
    - WARN
    - ERROR
    Description: Default logging level for all logs
  LogRetentionDays:
    Type: Number
    Default: 30
    Description: Number of days to retain CloudWatch logs
    AllowedValues:
    - 1
    - 3
    - 5
    - 7
    - 14
    - 30
    - 60
    - 90
    - 120
    - 150
    - 180
    - 365
    - 400
    - 545
    - 731
    - 1827
    - 3653
  CloudFrontPriceClass:
    Type: String
    Default: PriceClass_100
    Description: Specify the CloudFront price class. See https://aws.amazon.com/cloudfront/pricing/
      for a description of each price class.
    AllowedValues:
    - PriceClass_100
    - PriceClass_200
    - PriceClass_All
    ConstraintDescription: Allowed Price Classes PriceClass_100 PriceClass_200 and
      PriceClass_All
  CloudFrontAllowedGeos:
    Type: String
    Default: ''
    Description: 'Specify a comma separated list of two letter country codes (uppercase
      ISO 3166-1) that are allowed to access the web user interface via CloudFront.
      For example: US,CA. Leave empty if you do not want geo restrictions to be applied.'
    AllowedPattern: ^(|[A-Z]{2}(,[A-Z]{2})*)$
    ConstraintDescription: Comma separated list of uppercase two letter country codes
      or empty
  WAFAllowedIPv4Ranges:
    Type: String
    Default: '0.0.0.0/0'
    Description: 'Comma-separated list of IPv4 CIDR ranges to allow. Default (0.0.0.0/0)
      disables WAF and allows all IPs. Example to restrict: "192.168.1.0/24, 10.0.0.0/16"'
    AllowedPattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}(,\s*([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2})*$
    ConstraintDescription: Must be valid comma-separated list of IPv4 CIDR ranges
Rules:
  Pattern3UDOPModelArtifactPath:
    RuleCondition:
      Fn::Equals:
      - Ref: IDPPattern
      - Pattern3 - Packet processing with Textract, SageMaker(UDOP), and Bedrock
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: Pattern3UDOPModelArtifactPath
          - ''
      AssertDescription: UDOP Model Artifact Path is required when IDPPattern is 'Pattern1'
Conditions:
  IsPattern1:
    Fn::Equals:
    - Ref: IDPPattern
    - Pattern1 - Packet or Media processing with Bedrock Data Automation (BDA)
  IsPattern2:
    Fn::Equals:
    - Ref: IDPPattern
    - Pattern2 - Packet processing with Textract and Bedrock
  IsPattern3:
    Fn::Equals:
    - Ref: IDPPattern
    - Pattern3 - Packet processing with Textract, SageMaker(UDOP), and Bedrock
  ShouldCreateBDASampleProject:
    Fn::And:
    - Condition: IsPattern1
    - Fn::Equals:
      - Ref: Pattern1BDAProjectArn
      - ''
  HasGuardrailConfig:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: BedrockGuardrailId
        - ''
    - Fn::Not:
      - Fn::Equals:
        - Ref: BedrockGuardrailVersion
        - ''
  IsHITLEnabled:
    Fn::Equals:
    - Ref: EnableHITL
    - 'true'
  ShouldCreatePrivateWorkteam:
    Fn::And:
    - Condition: IsHITLEnabled
    - Fn::Equals:
      - Ref: ExistingPrivateWorkforceArn
      - ''
  ShouldUseExistingPrivateWorkteam:
    Fn::And:
    - Condition: IsHITLEnabled
    - Fn::Not:
      - Fn::Equals:
        - Ref: ExistingPrivateWorkforceArn
        - ''
  ShouldAllowSignUpEmailDomain:
    Fn::Not:
    - Fn::Equals:
      - Ref: AllowedSignUpEmailDomain
      - ''
  ShouldEnableGeoRestriction:
    Fn::Not:
    - Fn::Equals:
      - Ref: CloudFrontAllowedGeos
      - ''
  ShouldEnablePostProcessingLambdaHook:
    Fn::Not:
    - Fn::Equals:
      - Ref: PostProcessingLambdaHookFunctionArn
      - ''
  ShouldCreateEvaluationBaselineBucket:
    Fn::Equals:
    - Ref: EvaluationBaselineBucketName
    - ''
  ShouldCreateReportingBucket:
    Fn::Equals:
    - Ref: ReportingBucketName
    - ''
  IsEvaluationAutoEnabled:
    Fn::Equals:
    - Ref: EvaluationAutoEnabled
    - 'true'
  IsWafEnabled:
    Fn::Not:
    - Fn::Equals:
      - Ref: WAFAllowedIPv4Ranges
      - '0.0.0.0/0'
  ShouldCreateDocumentKnowledgeBase:
    Fn::Equals:
    - Ref: DocumentKnowledgeBase
    - BEDROCK_KNOWLEDGE_BASE (Create)
  ShouldUseDocumentKnowledgeBase:
    Condition: ShouldCreateDocumentKnowledgeBase
  DocumentSectionsCrawlerScheduleEnabled:
    Fn::Not:
    - Fn::Equals:
      - Ref: DocumentSectionsCrawlerFrequency
      - Manual
  HasPermissionsBoundary:
    Fn::Not:
    - Fn::Equals:
      - Ref: PermissionsBoundaryArn
      - ''
  HasCustomConfigPath:
    Fn::Not:
    - Fn::Equals:
      - Ref: CustomConfigPath
      - ''
  IsS3VectorsVectorStore:
    Fn::Equals:
    - Ref: KnowledgeBaseVectorStore
    - S3_VECTORS
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: User Authentication
      Parameters:
      - AdminEmail
      - AllowedSignUpEmailDomain
    - Label:
        default: Workflow Pattern Selection
      Parameters:
      - IDPPattern
    - Label:
        default: Pattern 1 Configuration
      Parameters:
      - Pattern1Configuration
      - Pattern1BDAProjectArn
    - Label:
        default: Pattern 2 Configuration
      Parameters:
      - Pattern2Configuration
      - Pattern2CustomClassificationModelARN
      - Pattern2CustomExtractionModelARN
    - Label:
        default: Pattern 3 Configuration
      Parameters:
      - Pattern3Configuration
      - Pattern3UDOPModelArtifactPath
    - Label:
        default: Custom Configuration
      Parameters:
      - CustomConfigPath
    - Label:
        default: HITL (A2I) Configuration
      Parameters:
      - EnableHITL
      - ExistingPrivateWorkforceArn
    - Label:
        default: Evaluation
      Parameters:
      - EvaluationBaselineBucketName
      - EvaluationAutoEnabled
    - Label:
        default: Reporting
      Parameters:
      - ReportingBucketName
      - DocumentSectionsCrawlerFrequency
    - Label:
        default: Document Knowledge Base
      Parameters:
      - DocumentKnowledgeBase
      - KnowledgeBaseVectorStore
      - KnowledgeBaseModelId
    - Label:
        default: Agentic Analysis
      Parameters:
      - DocumentAnalysisAgentModelId
    - Label:
        default: Post Processing
      Parameters:
      - PostProcessingLambdaHookFunctionArn
    - Label:
        default: Bedrock Guardrails
      Parameters:
      - BedrockGuardrailId
      - BedrockGuardrailVersion
    - Label:
        default: Security Configuration
      Parameters:
      - PermissionsBoundaryArn
      - WAFAllowedIPv4Ranges
    - Label:
        default: General Configuration
      Parameters:
      - MaxConcurrentWorkflows
      - DataRetentionInDays
      - ErrorThreshold
      - ExecutionTimeThresholdMs
      - LogLevel
      - LogRetentionDays
      - CloudFrontPriceClass
      - CloudFrontAllowedGeos
    ParameterLabels:
      AdminEmail:
        default: Admin Email Address
      AllowedSignUpEmailDomain:
        default: Allowed Sign Up Email Domain
      IDPPattern:
        default: Document Processing Pattern
      Pattern1BDAProjectArn:
        default: Pattern1 - Packet or Media processing with Bedrock Data Automation
          (BDA) Project ARN
      Pattern2CustomClassificationModelARN:
        default: Pattern2 - Custom Classification Model ARN
      Pattern2CustomExtractionModelARN:
        default: Pattern2 - Custom Extraction Model ARN
      Pattern1Configuration:
        default: Pattern1 - Configuration Preset
      EnableHITL:
        default: Enable Human In The Loop
      ExistingPrivateWorkforceArn:
        default: Existing Private Workforce ARN
      Pattern2Configuration:
        default: Pattern2 - Configuration Preset
      Pattern3UDOPModelArtifactPath:
        default: Pattern3 - UDOP Model Artifact Path
      Pattern3Configuration:
        default: Pattern3 - Configuration Preset
      CustomConfigPath:
        default: Custom Configuration Path
      PostProcessingLambdaHookFunctionArn:
        default: Post Processing Lambda Hook Function ARN
      EvaluationBaselineBucketName:
        default: Evaluation Baseline Bucket Name
      EvaluationAutoEnabled:
        default: Evaluation Auto Enabled
      ReportingBucketName:
        default: Reporting Bucket Name
      DocumentKnowledgeBase:
        default: Document Knowledge Base Configuration
      KnowledgeBaseModelId:
        default: Knowledge Base Model Id
      DocumentAnalysisAgentModelId:
        default: Document Analysis Agent Model Id
      BedrockGuardrailId:
        default: Bedrock Guardrail Id
      BedrockGuardrailVersion:
        default: Bedrock Guardrail Version
      PermissionsBoundaryArn:
        default: Permissions Boundary ARN
      MaxConcurrentWorkflows:
        default: Maximum Concurrent Workflows
      DataRetentionInDays:
        default: Data Retention Period (days)
      ErrorThreshold:
        default: Error Alert Threshold
      ExecutionTimeThresholdMs:
        default: Execution Time Threshold (ms)
      LogLevel:
        default: Logging Level
      LogRetentionDays:
        default: Log Retention Period (days)
      CloudFrontPriceClass:
        default: CloudFront Price Class
      CloudFrontAllowedGeos:
        default: CloudFront Allowed Geos
      WAFAllowedIPv4Ranges:
        default: WAF Allowed IPv4 Ranges
Resources:
  StacknameCheckFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it has no network access
        - id: W92
          reason: Reserved concurrency not required
      SamResourceId: StacknameCheckFunction
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      InlineCode: "import cfnresponse\nimport time\nimport json\ndef handler(event,\
        \ context):\n    print(json.dumps(event))\n    input = event['ResourceProperties'].get('InputString',\
        \ '')\n    max_length = int(event['ResourceProperties'].get('MaxLength', 0))\n\
        \    status = cfnresponse.SUCCESS\n    reason = f\"Stack Name Length under\
        \ {max_length} - OK\"\n    if event['RequestType'] == \"Create\":\n      if\
        \ len(input) > max_length:\n        status = cfnresponse.FAILED\n        reason\
        \ = f\"Stack Name ({input}) length ({len(input)}) too long - max length {max_length}\
        \ - FAILED\"\n    else:\n      print(f\"Request type is {event['RequestType']}\
        \ - skipping\")\n    cfnresponse.send(event, context, status, {}, reason=reason)\n"
      Environment:
        Variables:
          LOG_LEVEL: INFO
      LoggingConfig:
        LogGroup:
          Ref: StacknameCheckFunctionLogGroup
  StacknameCheckFunctionLogGroup:
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: LogGroup does not require KMS Key Id, since it's only logging checks
            on stack name length
      SamResourceId: StacknameCheckFunctionLogGroup
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        Ref: LogRetentionDays
  IsStacknameLengthOK:
    Type: Custom::StacknameCheck
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - StacknameCheckFunction
        - Arn
      InputString:
        Ref: AWS::StackName
      MaxLength: 25
    Metadata:
      SamResourceId: IsStacknameLengthOK
  ConfigurationCopyFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with S3
        - id: W92
          reason: Reserved concurrency not required
      SamResourceId: ConfigurationCopyFunction
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      Timeout: 300
      InlineCode: "import boto3\nimport cfnresponse\nimport json\nimport logging\n\
        \nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\ndef handler(event,\
        \ context):\n    logger.info(json.dumps(event))\n    \n    try:\n        source_bucket\
        \ = event['ResourceProperties']['SourceBucket']\n        source_prefix = event['ResourceProperties']['SourcePrefix']\n\
        \        target_bucket = event['ResourceProperties']['TargetBucket']\n   \
        \     target_prefix = event['ResourceProperties'].get('TargetPrefix', '')\n\
        \        \n        file_list = event['ResourceProperties'].get('FileList',\
        \ [])\n        \n        s3_client = boto3.client('s3')\n        \n      \
        \  if event['RequestType'] == 'Create' or event['RequestType'] == 'Update':\n\
        \            # Copy files explicitly from the provided list\n            copied_count\
        \ = 0\n            \n            for relative_file_path in file_list:\n  \
        \              # Skip empty entries\n                if not relative_file_path.strip():\n\
        \                    continue\n                    \n                # Construct\
        \ source key\n                source_key = f\"{source_prefix}/{relative_file_path}\"\
        \n                \n                # Construct target key with optional target\
        \ prefix\n                if target_prefix:\n                    target_key\
        \ = f\"{target_prefix}/{relative_file_path}\"\n                else:\n   \
        \                 target_key = relative_file_path\n                \n    \
        \            logger.info(f\"Copying {source_bucket}/{source_key} to {target_bucket}/{target_key}\"\
        )\n                \n                try:\n                    copy_source\
        \ = {'Bucket': source_bucket, 'Key': source_key}\n                    s3_client.copy_object(\n\
        \                        CopySource=copy_source,\n                       \
        \ Bucket=target_bucket,\n                        Key=target_key\n        \
        \            )\n                    copied_count += 1\n                except\
        \ Exception as copy_error:\n                    logger.warning(f\"Failed to\
        \ copy {source_key}: {str(copy_error)}\")\n                    # Continue\
        \ with other files instead of failing the entire operation\n            \n\
        \            logger.info(f\"Successfully copied {copied_count} configuration\
        \ files\")\n            cfnresponse.send(event, context, cfnresponse.SUCCESS,\
        \ {\n                'CopiedFiles': copied_count\n            }, reason=f\"\
        Successfully copied {copied_count} configuration files\")\n            \n\
        \        elif event['RequestType'] == 'Delete':\n            # For delete,\
        \ we don't need to clean up the configuration files\n            # as they\
        \ may be needed by other resources\n            logger.info(\"Delete request\
        \ - no action needed for configuration files\")\n            cfnresponse.send(event,\
        \ context, cfnresponse.SUCCESS, {}, \n                           reason=\"\
        Delete completed - configuration files retained\")\n            \n    except\
        \ Exception as e:\n        logger.error(f\"Error: {str(e)}\")\n        cfnresponse.send(event,\
        \ context, cfnresponse.FAILED, {}, \n                       reason=f\"Error\
        \ copying configuration files: {str(e)}\")\n"
      Environment:
        Variables:
          LOG_LEVEL: INFO
      LoggingConfig:
        LogGroup:
          Ref: ConfigurationCopyFunctionLogGroup
      Policies:
      - S3ReadPolicy:
          BucketName: aws-ml-blog-us-east-1
      - S3WritePolicy:
          BucketName:
            Ref: ConfigurationBucket
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  ConfigurationCopyFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        Ref: LogRetentionDays
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
    Metadata:
      SamResourceId: ConfigurationCopyFunctionLogGroup
  CopyConfigurationFiles:
    Type: Custom::ConfigurationCopy
    DependsOn:
    - ConfigurationBucket
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - ConfigurationCopyFunction
        - Arn
      SourceBucket: aws-ml-blog-us-east-1
      SourcePrefix: artifacts/genai-idp/0.3.17/config_library
      TargetBucket:
        Ref: ConfigurationBucket
      TargetPrefix: config_library
      ConfigLibraryHash: c3edc19424ebacd0
      FileList:
      - README.md
      - TEMPLATE_README.md
      - pattern-1/README.md
      - pattern-1/lending-package-sample/README.md
      - pattern-1/lending-package-sample/config.yaml
      - pattern-1/lending-package-sample/samples/lending_package.pdf
      - pattern-2/README.md
      - pattern-2/bank-statement-sample/README.md
      - pattern-2/bank-statement-sample/config.yaml
      - pattern-2/criteria-validation/config.yaml
      - pattern-2/lending-package-sample/README.md
      - pattern-2/lending-package-sample/config.yaml
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/README.md
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/config.yaml
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/bank-statement-pages/image1.jpg
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/bank-statement-pages/image2.jpg
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/bank-statement-pages/image3.jpg
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/email1.jpg
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/letter1.jpg
      - pattern-2/rvl-cdip-package-sample-with-few-shot-examples/example-images/letter2.png
      - pattern-2/rvl-cdip-package-sample/README.md
      - pattern-2/rvl-cdip-package-sample/config.yaml
      - pattern-3/README.md
      - pattern-3/rvl-cdip-package-sample/README.md
      - pattern-3/rvl-cdip-package-sample/config.yaml
    Metadata:
      SamResourceId: CopyConfigurationFiles
  BDASAMPLEPROJECT:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::CloudFormation::Stack
    Condition: ShouldCreateBDASampleProject
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/953750ae8024cda8c171a07e2c90c4a3.template
      Parameters:
        ProjectName:
          Fn::Sub: ${AWS::StackName}-BDA-Lending-Sample-Project
        ProjectDescription:
          Fn::Sub: ${AWS::StackName}-BDA-Lending-Sample-Project
        LogLevel:
          Ref: LogLevel
        PermissionsBoundaryArn:
          Ref: PermissionsBoundaryArn
    Metadata:
      SamResourceId: BDASAMPLEPROJECT
  DOCUMENTKB:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::CloudFormation::Stack
    Condition: ShouldCreateDocumentKnowledgeBase
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/85fef0b8f2fac44e331bb179b8a238b3.template
      Parameters:
        pKnowledgeBaseBucketName:
          Ref: OutputBucket
        pInputDocumentUploadFolderPrefix: ''
        pS3SyncScheduleExpression: cron(0/30 * ? * * *)
        pCustomerManagedEncryptionKeyArn:
          Fn::GetAtt:
          - CustomerManagedEncryptionKey
          - Arn
        pChunkingStrategy: Fixed-size chunking
        pMaxTokens: 8192
        pVectorStoreType:
          Ref: KnowledgeBaseVectorStore
        LogLevel:
          Ref: LogLevel
        PermissionsBoundaryArn:
          Ref: PermissionsBoundaryArn
    Metadata:
      SamResourceId: DOCUMENTKB
  PATTERN1STACK:
    DependsOn:
    - IsStacknameLengthOK
    - CopyConfigurationFiles
    Type: AWS::CloudFormation::Stack
    Condition: IsPattern1
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/618e52e27a1d91b1d378a46836f1d6f3.template
      Parameters:
        StackName:
          Ref: AWS::StackName
        InputBucket:
          Ref: InputBucket
        DiscoveryBucket:
          Ref: DiscoveryBucket
        ConfigurationQueueArn:
          Fn::GetAtt:
          - ConfigurationQueue
          - Arn
        DiscoveryTrackingTable:
          Ref: DiscoveryTrackingTable
        ConfigurationBucket:
          Ref: ConfigurationBucket
        WorkingBucket:
          Ref: WorkingBucket
        OutputBucket:
          Ref: OutputBucket
        TrackingTable:
          Ref: TrackingTable
        CustomerManagedEncryptionKeyArn:
          Fn::GetAtt:
          - CustomerManagedEncryptionKey
          - Arn
        LogRetentionDays:
          Ref: LogRetentionDays
        LogLevel:
          Ref: LogLevel
        ExecutionTimeThresholdMs:
          Ref: ExecutionTimeThresholdMs
        BedrockGuardrailId:
          Ref: BedrockGuardrailId
        BedrockGuardrailVersion:
          Ref: BedrockGuardrailVersion
        BDAProjectArn:
          Fn::If:
          - ShouldCreateBDASampleProject
          - Fn::GetAtt:
            - BDASAMPLEPROJECT
            - Outputs.ProjectArn
          - Ref: Pattern1BDAProjectArn
        UpdateConfigurationFunctionArn:
          Fn::GetAtt:
          - UpdateConfigurationFunction
          - Arn
        ConfigurationTable:
          Ref: ConfigurationTable
        AppSyncApiUrl:
          Fn::GetAtt:
          - GraphQLApi
          - GraphQLUrl
        AppSyncApiArn:
          Fn::GetAtt:
          - GraphQLApi
          - Arn
        EnableHITL:
          Ref: EnableHITL
        ConfigurationDefaultS3Uri:
          Fn::If:
          - HasCustomConfigPath
          - Ref: CustomConfigPath
          - Fn::Sub:
            - s3://${ConfigurationBucket}/config_library/pattern-1/${ConfigPath}/config.yaml
            - ConfigPath:
                Fn::FindInMap:
                - Pattern1ConfigurationMap
                - Ref: Pattern1Configuration
                - ConfigPath
        ConfigLibraryHash: c3edc19424ebacd0
        PermissionsBoundaryArn:
          Ref: PermissionsBoundaryArn
        SageMakerA2IReviewPortalURL:
          Fn::If:
          - IsHITLEnabled
          - Fn::GetAtt:
            - WorkforceURLResource
            - PortalURL
          - ''
    Metadata:
      SamResourceId: PATTERN1STACK
  PATTERN2STACK:
    DependsOn:
    - IsStacknameLengthOK
    - CopyConfigurationFiles
    - GraphQLApi
    Type: AWS::CloudFormation::Stack
    Condition: IsPattern2
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/8e054e10c58383436920cff97c097a52.template
      Parameters:
        StackName:
          Ref: AWS::StackName
        InputBucket:
          Ref: InputBucket
        ConfigurationBucket:
          Ref: ConfigurationBucket
        OutputBucket:
          Ref: OutputBucket
        WorkingBucket:
          Ref: WorkingBucket
        TrackingTable:
          Ref: TrackingTable
        CustomerManagedEncryptionKeyArn:
          Fn::GetAtt:
          - CustomerManagedEncryptionKey
          - Arn
        LogRetentionDays:
          Ref: LogRetentionDays
        LogLevel:
          Ref: LogLevel
        ExecutionTimeThresholdMs:
          Ref: ExecutionTimeThresholdMs
        BedrockGuardrailId:
          Ref: BedrockGuardrailId
        BedrockGuardrailVersion:
          Ref: BedrockGuardrailVersion
        CustomClassificationModelARN:
          Ref: Pattern2CustomClassificationModelARN
        CustomExtractionModelARN:
          Ref: Pattern2CustomExtractionModelARN
        UpdateConfigurationFunctionArn:
          Fn::GetAtt:
          - UpdateConfigurationFunction
          - Arn
        AppSyncApiUrl:
          Fn::GetAtt:
          - GraphQLApi
          - GraphQLUrl
        AppSyncApiArn:
          Fn::GetAtt:
          - GraphQLApi
          - Arn
        ConfigurationTable:
          Ref: ConfigurationTable
        ConfigurationDefaultS3Uri:
          Fn::If:
          - HasCustomConfigPath
          - Ref: CustomConfigPath
          - Fn::Sub:
            - s3://${ConfigurationBucket}/config_library/pattern-2/${ConfigPath}/config.yaml
            - ConfigPath:
                Fn::FindInMap:
                - Pattern2ConfigurationMap
                - Ref: Pattern2Configuration
                - ConfigPath
        ConfigLibraryHash: c3edc19424ebacd0
        EnableHITL:
          Ref: EnableHITL
        SageMakerA2IReviewPortalURL:
          Fn::If:
          - IsHITLEnabled
          - Fn::GetAtt:
            - WorkforceURLResource
            - PortalURL
          - ''
        PermissionsBoundaryArn:
          Ref: PermissionsBoundaryArn
    Metadata:
      SamResourceId: PATTERN2STACK
  PATTERN3STACK:
    DependsOn:
    - IsStacknameLengthOK
    - CopyConfigurationFiles
    Type: AWS::CloudFormation::Stack
    Condition: IsPattern3
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/fa2f45768aad5145e5f80ab4a361c8bc.template
      Parameters:
        StackName:
          Ref: AWS::StackName
        InputBucket:
          Ref: InputBucket
        ConfigurationBucket:
          Ref: ConfigurationBucket
        OutputBucket:
          Ref: OutputBucket
        WorkingBucket:
          Ref: WorkingBucket
        TrackingTable:
          Ref: TrackingTable
        CustomerManagedEncryptionKeyArn:
          Fn::GetAtt:
          - CustomerManagedEncryptionKey
          - Arn
        LogRetentionDays:
          Ref: LogRetentionDays
        LogLevel:
          Ref: LogLevel
        ExecutionTimeThresholdMs:
          Ref: ExecutionTimeThresholdMs
        BedrockGuardrailId:
          Ref: BedrockGuardrailId
        BedrockGuardrailVersion:
          Ref: BedrockGuardrailVersion
        UDOPModelArtifactPath:
          Ref: Pattern3UDOPModelArtifactPath
        UpdateConfigurationFunctionArn:
          Fn::GetAtt:
          - UpdateConfigurationFunction
          - Arn
        AppSyncApiUrl:
          Fn::GetAtt:
          - GraphQLApi
          - GraphQLUrl
        AppSyncApiArn:
          Fn::GetAtt:
          - GraphQLApi
          - Arn
        ConfigurationTable:
          Ref: ConfigurationTable
        ConfigurationDefaultS3Uri:
          Fn::If:
          - HasCustomConfigPath
          - Ref: CustomConfigPath
          - Fn::Sub:
            - s3://${ConfigurationBucket}/config_library/pattern-3/${ConfigPath}/config.yaml
            - ConfigPath:
                Fn::FindInMap:
                - Pattern3ConfigurationMap
                - Ref: Pattern3Configuration
                - ConfigPath
        ConfigLibraryHash: c3edc19424ebacd0
        EnableHITL:
          Ref: EnableHITL
        SageMakerA2IReviewPortalURL:
          Fn::If:
          - IsHITLEnabled
          - Fn::GetAtt:
            - WorkforceURLResource
            - PortalURL
          - ''
        PermissionsBoundaryArn:
          Ref: PermissionsBoundaryArn
    Metadata:
      SamResourceId: PATTERN3STACK
  CustomerManagedEncryptionKey:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for DynamoDB encryption
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
        - Sid: Allow lambda to access the Keys
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: '*'
        - Sid: Allow DynamoDB to use the key
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: dynamodb.${AWS::URLSuffix}
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: '*'
        - Sid: Allow CloudWatch Logs to use the key
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: logs.${AWS::URLSuffix}
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: '*'
        - Fn::If:
          - IsS3VectorsVectorStore
          - Sid: Allow S3 Vectors indexing service to use the key
            Effect: Allow
            Principal:
              Service:
                Fn::Sub: indexing.s3vectors.${AWS::URLSuffix}
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource: '*'
          - Ref: AWS::NoValue
    Metadata:
      SamResourceId: CustomerManagedEncryptionKey
  CustomerManagedEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName:
        Fn::Sub: alias/${AWS::StackName}-customer-encryption-key
      TargetKeyId:
        Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: CustomerManagedEncryptionKeyAlias
  LoggingBucket:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W35
          reason: This is the logging destination bucket - does not require its own
            access logging
      SamResourceId: LoggingBucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules:
        - ObjectOwnership: BucketOwnerPreferred
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
        - Id: DeleteOldLogs
          Status: Enabled
          ExpirationInDays: 180
          Prefix: ''
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 7
  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: LoggingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowS3ServerAccessLogs
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: logging.s3.${AWS::URLSuffix}
          Action:
          - s3:PutObject
          Resource:
            Fn::Sub: ${LoggingBucket.Arn}/*
          Condition:
            StringEquals:
              aws:SourceAccount:
                Ref: AWS::AccountId
        - Sid: AllowCloudFrontLogs
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: cloudfront.${AWS::URLSuffix}
          Action:
          - s3:PutObject
          Resource:
            Fn::Sub: ${LoggingBucket.Arn}/*
          Condition:
            StringEquals:
              AWS:SourceAccount:
                Ref: AWS::AccountId
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${LoggingBucket.Arn}/*
          - Fn::Sub: ${LoggingBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: LoggingBucketPolicy
  DiscoveryBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: discov-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: DataRetentionInDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: DiscoveryBucket
  DiscoveryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: DiscoveryBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${DiscoveryBucket.Arn}/*
          - Fn::Sub: ${DiscoveryBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: DiscoveryBucketPolicy
  InputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: input-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: DataRetentionInDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: InputBucket
  InputBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: InputBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${InputBucket.Arn}/*
          - Fn::Sub: ${InputBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: InputBucketPolicy
  ConfigurationBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: input-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: DataRetentionInDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: ConfigurationBucket
  ConfigurationBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ConfigurationBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${ConfigurationBucket.Arn}/*
          - Fn::Sub: ${ConfigurationBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: ConfigurationBucketPolicy
  WorkingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: working-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: LogRetentionDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: WorkingBucket
  WorkingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WorkingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${WorkingBucket.Arn}/*
          - Fn::Sub: ${WorkingBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: WorkingBucketPolicy
  OutputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: output-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: DataRetentionInDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: OutputBucket
  OutputBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: OutputBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${OutputBucket.Arn}/*
          - Fn::Sub: ${OutputBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: OutputBucketPolicy
  ReportingBucket:
    Type: AWS::S3::Bucket
    Condition: ShouldCreateReportingBucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: reporting-bucket-logs/
      LifecycleConfiguration:
        Rules:
        - Id: DeleteAfterNDays
          Status: Enabled
          ExpirationInDays:
            Ref: DataRetentionInDays
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
    Metadata:
      SamResourceId: ReportingBucket
  ReportingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: ShouldCreateReportingBucket
    Properties:
      Bucket:
        Ref: ReportingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${ReportingBucket.Arn}/*
          - Fn::Sub: ${ReportingBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: ReportingBucketPolicy
  GetLowercase:
    Type: Custom::GetLowercase
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - GetDomainLambda
        - Arn
      InputString:
        Ref: AWS::StackName
    Metadata:
      SamResourceId: GetLowercase
  ReportingDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Name:
          Fn::Sub: ${GetLowercase.Lowercase}-reporting-db
        Description: Database for evaluation results
    Metadata:
      SamResourceId: ReportingDatabase
  DocumentEvaluationsTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: ReportingDatabase
      TableInput:
        Name: document_evaluations
        Description: Table for document-level evaluation metrics
        TableType: EXTERNAL_TABLE
        Parameters:
          classification: parquet
          typeOfData: file
          projection.enabled: 'true'
          projection.date.type: date
          projection.date.format: yyyy-MM-dd
          projection.date.range: 2024-01-01,2030-12-31
          projection.date.interval: '1'
          projection.date.interval.unit: DAYS
          storage.location.template:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/document_metrics/date=${date}/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
              date: ${date}
        StorageDescriptor:
          Location:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/document_metrics/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
          - Name: document_id
            Type: string
          - Name: input_key
            Type: string
          - Name: evaluation_date
            Type: timestamp
          - Name: accuracy
            Type: double
          - Name: precision
            Type: double
          - Name: recall
            Type: double
          - Name: f1_score
            Type: double
          - Name: false_alarm_rate
            Type: double
          - Name: false_discovery_rate
            Type: double
          - Name: execution_time
            Type: double
          Compressed: true
        PartitionKeys:
        - Name: date
          Type: string
    Metadata:
      SamResourceId: DocumentEvaluationsTable
  SectionEvaluationsTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: ReportingDatabase
      TableInput:
        Name: section_evaluations
        Description: Table for section-level evaluation metrics
        TableType: EXTERNAL_TABLE
        Parameters:
          classification: parquet
          typeOfData: file
          projection.enabled: 'true'
          projection.date.type: date
          projection.date.format: yyyy-MM-dd
          projection.date.range: 2024-01-01,2030-12-31
          projection.date.interval: '1'
          projection.date.interval.unit: DAYS
          storage.location.template:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/section_metrics/date=${date}/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
              date: ${date}
        StorageDescriptor:
          Location:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/section_metrics/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
          - Name: document_id
            Type: string
          - Name: section_id
            Type: string
          - Name: section_type
            Type: string
          - Name: accuracy
            Type: double
          - Name: precision
            Type: double
          - Name: recall
            Type: double
          - Name: f1_score
            Type: double
          - Name: false_alarm_rate
            Type: double
          - Name: false_discovery_rate
            Type: double
          - Name: evaluation_date
            Type: timestamp
          Compressed: true
        PartitionKeys:
        - Name: date
          Type: string
    Metadata:
      SamResourceId: SectionEvaluationsTable
  AttributeEvaluationsTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: ReportingDatabase
      TableInput:
        Name: attribute_evaluations
        Description: Table for attribute-level evaluation metrics
        TableType: EXTERNAL_TABLE
        Parameters:
          classification: parquet
          typeOfData: file
          projection.enabled: 'true'
          projection.date.type: date
          projection.date.format: yyyy-MM-dd
          projection.date.range: 2024-01-01,2030-12-31
          projection.date.interval: '1'
          projection.date.interval.unit: DAYS
          storage.location.template:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/attribute_metrics/date=${date}/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
              date: ${date}
        StorageDescriptor:
          Location:
            Fn::Sub:
            - s3://${Bucket}/evaluation_metrics/attribute_metrics/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
          - Name: document_id
            Type: string
          - Name: section_id
            Type: string
          - Name: section_type
            Type: string
          - Name: attribute_name
            Type: string
          - Name: expected
            Type: string
          - Name: actual
            Type: string
          - Name: matched
            Type: boolean
          - Name: score
            Type: double
          - Name: reason
            Type: string
          - Name: evaluation_method
            Type: string
          - Name: confidence
            Type: string
          - Name: confidence_threshold
            Type: string
          - Name: evaluation_date
            Type: timestamp
          Compressed: true
        PartitionKeys:
        - Name: date
          Type: string
    Metadata:
      SamResourceId: AttributeEvaluationsTable
  MeteringTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: ReportingDatabase
      TableInput:
        Name: metering
        Description: Table for document metering data
        TableType: EXTERNAL_TABLE
        Parameters:
          classification: parquet
          typeOfData: file
          projection.enabled: 'true'
          projection.date.type: date
          projection.date.format: yyyy-MM-dd
          projection.date.range: 2024-01-01,2030-12-31
          projection.date.interval: '1'
          projection.date.interval.unit: DAYS
          storage.location.template:
            Fn::Sub:
            - s3://${Bucket}/metering/date=${date}/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
              date: ${date}
        StorageDescriptor:
          Location:
            Fn::Sub:
            - s3://${Bucket}/metering/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
          - Name: document_id
            Type: string
          - Name: context
            Type: string
          - Name: service_api
            Type: string
          - Name: unit
            Type: string
          - Name: value
            Type: double
          - Name: number_of_pages
            Type: int
          - Name: unit_cost
            Type: double
          - Name: estimated_cost
            Type: double
          - Name: timestamp
            Type: timestamp
          Compressed: true
        PartitionKeys:
        - Name: date
          Type: string
    Metadata:
      SamResourceId: MeteringTable
  DocumentSectionsCrawlerSecurityConfigurationV2:
    Type: AWS::Glue::SecurityConfiguration
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-document-sections-crawler-security-config-v2
      EncryptionConfiguration:
        S3Encryptions:
        - S3EncryptionMode: SSE-KMS
          KmsKeyArn:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
    Metadata:
      SamResourceId: DocumentSectionsCrawlerSecurityConfigurationV2
  DocumentSectionsCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-document-sections-crawler
      Description: Crawler to discover document section tables in the reporting bucket
        with conservative schema handling
      Role:
        Fn::GetAtt:
        - DocumentSectionsCrawlerRole
        - Arn
      DatabaseName:
        Ref: ReportingDatabase
      CrawlerSecurityConfiguration:
        Ref: DocumentSectionsCrawlerSecurityConfigurationV2
      Targets:
        S3Targets:
        - Path:
            Fn::Sub:
            - s3://${Bucket}/document_sections/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG
      TablePrefix: document_sections_
      Configuration: "{\n  \"Version\": 1.0,\n  \"CrawlerOutput\": {\n    \"Partitions\"\
        : { \"AddOrUpdateBehavior\": \"InheritFromTable\" },\n    \"Tables\": { \"\
        AddOrUpdateBehavior\": \"MergeNewColumns\" }\n  },\n  \"Grouping\": { \"TableLevelConfiguration\"\
        : 3 },\n  \"CreatePartitionIndex\": true\n}\n"
      Schedule:
        Fn::If:
        - DocumentSectionsCrawlerScheduleEnabled
        - ScheduleExpression:
            Fn::FindInMap:
            - CrawlerScheduleMap
            - Ref: DocumentSectionsCrawlerFrequency
            - ScheduleExpression
        - Ref: AWS::NoValue
    Metadata:
      SamResourceId: DocumentSectionsCrawler
  DocumentSectionsCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: glue.${AWS::URLSuffix}
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSGlueServiceRole
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: DocumentSectionsCrawlerS3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            Resource:
            - Fn::Sub:
              - arn:${AWS::Partition}:s3:::${Bucket}
              - Bucket:
                  Fn::If:
                  - ShouldCreateReportingBucket
                  - Ref: ReportingBucket
                  - Ref: ReportingBucketName
            - Fn::Sub:
              - arn:${AWS::Partition}:s3:::${Bucket}/document_sections/*
              - Bucket:
                  Fn::If:
                  - ShouldCreateReportingBucket
                  - Ref: ReportingBucket
                  - Ref: ReportingBucketName
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            Resource:
              Fn::GetAtt:
              - CustomerManagedEncryptionKey
              - Arn
    Metadata:
      SamResourceId: DocumentSectionsCrawlerRole
  EvaluationBaselineBucket:
    Type: AWS::S3::Bucket
    Condition: ShouldCreateEvaluationBaselineBucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - Content-Type
          - x-amz-content-sha256
          - x-amz-date
          - Authorization
          - x-amz-security-token
          AllowedMethods:
          - PUT
          - POST
          AllowedOrigins:
          - Fn::Sub: https://${CloudFrontDistribution.DomainName}
          - http://localhost:3000
          ExposedHeaders:
          - ETag
          - x-amz-server-side-encryption
          MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID:
              Ref: CustomerManagedEncryptionKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: output-bucket-logs/
    Metadata:
      SamResourceId: EvaluationBaselineBucket
  EvaluationBaselineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: ShouldCreateEvaluationBaselineBucket
    Properties:
      Bucket:
        Ref: EvaluationBaselineBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: ${EvaluationBaselineBucket.Arn}/*
          - Fn::Sub: ${EvaluationBaselineBucket.Arn}
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: EvaluationBaselineBucketPolicy
  WebUIBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: webapp-bucket-logs/
    Metadata:
      SamResourceId: WebUIBucket
  WebUIBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebUIBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - CloudFrontOriginAccessIdentity
              - S3CanonicalUserId
          Action: s3:GetObject
          Resource:
            Fn::Sub: ${WebUIBucket.Arn}/*
        - Effect: Deny
          Action:
          - s3:*
          Principal: '*'
          Resource:
          - Fn::GetAtt:
            - WebUIBucket
            - Arn
          - Fn::Sub: ${WebUIBucket.Arn}/*
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: WebUIBucketPolicy
  TrackingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ExpiresAfter
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: TrackingTable
  ConcurrencyTable:
    Type: AWS::DynamoDB::Table
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W78
          reason: Point-in-time recovery not required for concurrency tracking table
            as data is transient
      SamResourceId: ConcurrencyTable
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: counter_id
        AttributeType: S
      KeySchema:
      - AttributeName: counter_id
        KeyType: HASH
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Ref: CustomerManagedEncryptionKey
  InitializeConcurrencyTableLambda:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: InitializeConcurrencyTableLambda
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/a90b6f5845109d21578e915b4b1c924e
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          CONCURRENCY_TABLE:
            Ref: ConcurrencyTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConcurrencyTable
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  InitializeConcurrencyTableCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - InitializeConcurrencyTableLambda
        - Arn
      TableName:
        Ref: ConcurrencyTable
    Metadata:
      SamResourceId: InitializeConcurrencyTableCustomResource
  ConfigurationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: Configuration
        KeyType: HASH
      AttributeDefinitions:
      - AttributeName: Configuration
        AttributeType: S
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: ConfigurationTable
  DiscoveryTrackingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: jobId
        AttributeType: S
      KeySchema:
      - AttributeName: jobId
        KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ExpiresAfter
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: DiscoveryTrackingTable
  DiscoveryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      MessageRetentionPeriod: 86400
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - DiscoveryDLQ
          - Arn
        maxReceiveCount: 1000
    Metadata:
      SamResourceId: DiscoveryQueue
  DiscoveryDLQ:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      MessageRetentionPeriod: 345600
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: DiscoveryDLQ
  ConfigurationQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      MessageRetentionPeriod: 86400
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - ConfigurationDLQ
          - Arn
        maxReceiveCount: 1000
    Metadata:
      SamResourceId: ConfigurationQueue
  ConfigurationDLQ:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      MessageRetentionPeriod: 345600
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: ConfigurationDLQ
  UpdateConfigurationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: UpdateConfigurationFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/ce22ddc57f382e0a91fff1cc136acf19
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
      LoggingConfig:
        LogGroup:
          Ref: UpdateConfigurationFunctionLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConfigurationTable
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:ListBucket
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1
          - Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/*
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ConfigurationBucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ConfigurationBucket}/*
        - Fn::If:
          - HasCustomConfigPath
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
              Fn::Sub:
              - arn:${AWS::Partition}:s3:::${Path}
              - Path:
                  Fn::Select:
                  - 1
                  - Fn::Split:
                    - s3://
                    - Ref: CustomConfigPath
          - Ref: AWS::NoValue
        - Fn::If:
          - HasCustomConfigPath
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
              Fn::Sub:
              - arn:${AWS::Partition}:s3:::${BucketName}
              - BucketName:
                  Fn::Select:
                  - 0
                  - Fn::Split:
                    - /
                    - Fn::Select:
                      - 1
                      - Fn::Split:
                        - s3://
                        - Ref: CustomConfigPath
          - Ref: AWS::NoValue
  UpdateConfigurationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: UpdateConfigurationFunctionLogGroup
  SettingsParameter:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub: ${AWS::StackName}-Settings
      Value: '{}'
    Metadata:
      SamResourceId: SettingsParameter
  UpdateSettingsFunction:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: UpdateSettingsFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/56e8e33ce44f2606f4bb40179d1d23e9
      LoggingConfig:
        LogGroup:
          Ref: UpdateSettingsFunctionLogGroup
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - ssm:GetParameter
          - ssm:PutParameter
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SettingsParameter}
  UpdateSettingsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: UpdateSettingsFunctionLogGroup
  UpdateSettingsValues:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - UpdateSettingsFunction
        - Arn
      SettingsName:
        Ref: SettingsParameter
      SettingsKeyValuePairs:
        StackName:
          Fn::Sub: ${AWS::StackName}
        Version: '0.3.17'
        BuildDateTime: '2025-09-27 00:35:24'
        IDPPattern:
          Ref: IDPPattern
        InputBucket:
          Ref: InputBucket
        DiscoveryBucket:
          Ref: DiscoveryBucket
        ConfigurationBucket:
          Ref: ConfigurationBucket
        OutputBucket:
          Ref: OutputBucket
        ReportingBucket:
          Fn::If:
          - ShouldCreateReportingBucket
          - Ref: ReportingBucket
          - Ref: ReportingBucketName
        EvaluationBaselineBucket:
          Fn::If:
          - ShouldCreateEvaluationBaselineBucket
          - Ref: EvaluationBaselineBucket
          - Ref: EvaluationBaselineBucketName
        ShouldUseDocumentKnowledgeBase:
          Fn::If:
          - ShouldUseDocumentKnowledgeBase
          - true
          - false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      SamResourceId: UpdateSettingsValues
  DocumentQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
    Metadata:
      SamResourceId: DocumentQueueDLQ
  DocumentQueueDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: DocumentQueueDLQ
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - DocumentQueueDLQ
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: DocumentQueueDLQPolicy
  DocumentQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      VisibilityTimeout: 30
      MessageRetentionPeriod: 86400
      RedrivePolicy:
        maxReceiveCount: 1000
        deadLetterTargetArn:
          Fn::GetAtt:
          - DocumentQueueDLQ
          - Arn
    Metadata:
      SamResourceId: DocumentQueue
  DocumentQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: DocumentQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - DocumentQueue
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: DocumentQueuePolicy
  QueueSenderDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
    Metadata:
      SamResourceId: QueueSenderDLQ
  QueueSenderDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: QueueSenderDLQ
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - QueueSenderDLQ
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: QueueSenderDLQPolicy
  QueueSender:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: QueueSender
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/c7dd3c57eb7fbd0f190f59b3ba839d14
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - QueueSenderDLQ
          - Arn
      LoggingConfig:
        LogGroup:
          Ref: QueueSenderLogGroup
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          QUEUE_URL:
            Ref: DocumentQueue
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          DATA_RETENTION_IN_DAYS:
            Ref: DataRetentionInDays
          OUTPUT_BUCKET:
            Ref: OutputBucket
      Policies:
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - DocumentQueue
            - QueueName
      - Statement:
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
      Events:
        S3Event:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - aws.s3
              detail-type:
              - Object Created
              detail:
                bucket:
                  name:
                  - Ref: InputBucket
  QueueSenderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: QueueSenderLogGroup
  QueueProcessor:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: QueueProcessor
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/272cb52bb2d5e615df8171664f74e510
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      LoggingConfig:
        LogGroup:
          Ref: QueueProcessorLogGroup
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          STATE_MACHINE_ARN:
            Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineArn
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineArn
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineArn
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          CONCURRENCY_TABLE:
            Ref: ConcurrencyTable
          MAX_CONCURRENT:
            Ref: MaxConcurrentWorkflows
          WORKING_BUCKET:
            Ref: WorkingBucket
      Policies:
      - SQSPollerPolicy:
          QueueName:
            Fn::GetAtt:
            - DocumentQueue
            - QueueName
      - StepFunctionsExecutionPolicy:
          StateMachineName:
            Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineName
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineName
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineName
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConcurrencyTable
      - S3CrudPolicy:
          BucketName:
            Ref: WorkingBucket
      - Statement:
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - DocumentQueue
              - Arn
            BatchSize: 50
            MaximumBatchingWindowInSeconds: 1
            FunctionResponseTypes:
            - ReportBatchItemFailures
  QueueProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: QueueProcessorLogGroup
  WorkflowTrackerDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
    Metadata:
      SamResourceId: WorkflowTrackerDLQ
  WorkflowTrackerDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: WorkflowTrackerDLQ
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: EnforceSSLOnly
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - WorkflowTrackerDLQ
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
    Metadata:
      SamResourceId: WorkflowTrackerDLQPolicy
  WorkflowTracker:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: WorkflowTracker
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for CloudWatch Metrics and Logs
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/dc0320190038452dc2a88f8abe59b700
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - WorkflowTrackerDLQ
          - Arn
      LoggingConfig:
        LogGroup:
          Ref: WorkflowTrackerLogGroup
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          CONCURRENCY_TABLE:
            Ref: ConcurrencyTable
          METRIC_NAMESPACE:
            Ref: AWS::StackName
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          OUTPUT_BUCKET:
            Ref: OutputBucket
          REPORTING_BUCKET:
            Fn::If:
            - ShouldCreateReportingBucket
            - Ref: ReportingBucket
            - Ref: ReportingBucketName
          SAVE_REPORTING_FUNCTION_NAME:
            Ref: SaveReportingDataFunction
          WORKING_BUCKET:
            Ref: WorkingBucket
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConcurrencyTable
      - S3CrudPolicy:
          BucketName:
            Ref: WorkingBucket
      - Statement:
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          Resource: '*'
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          Resource:
            Fn::GetAtt:
            - SaveReportingDataFunction
            - Arn
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  WorkflowTrackerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: WorkflowTrackerLogGroup
  WorkflowStateChangeRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.states
        detail-type:
        - Step Functions Execution Status Change
        detail:
          stateMachineArn:
          - Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineArn
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineArn
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineArn
          status:
          - FAILED
          - TIMED_OUT
          - ABORTED
          - SUCCEEDED
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - WorkflowTracker
          - Arn
        Id: TrackWorkflowCompletion
        RetryPolicy:
          MaximumRetryAttempts: 3
    Metadata:
      SamResourceId: WorkflowStateChangeRule
  WorkflowTrackerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: WorkflowTracker
      Principal:
        Fn::Sub: events.${AWS::URLSuffix}
      SourceArn:
        Fn::GetAtt:
        - WorkflowStateChangeRule
        - Arn
    Metadata:
      SamResourceId: WorkflowTrackerPermission
  PostProcessingLambdaHookRule:
    Type: AWS::Events::Rule
    Condition: ShouldEnablePostProcessingLambdaHook
    Properties:
      EventPattern:
        source:
        - aws.states
        detail-type:
        - Step Functions Execution Status Change
        detail:
          stateMachineArn:
          - Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineArn
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineArn
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineArn
          status:
          - SUCCEEDED
      State: ENABLED
      Targets:
      - Arn:
          Ref: PostProcessingLambdaHookFunctionArn
        Id: PostProcessingLambdaHookFunction
        RetryPolicy:
          MaximumRetryAttempts: 3
    Metadata:
      SamResourceId: PostProcessingLambdaHookRule
  PostProcessingLambdaHookPermission:
    Type: AWS::Lambda::Permission
    Condition: ShouldEnablePostProcessingLambdaHook
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: PostProcessingLambdaHookFunctionArn
      Principal:
        Fn::Sub: events.${AWS::URLSuffix}
      SourceArn:
        Fn::GetAtt:
        - PostProcessingLambdaHookRule
        - Arn
    Metadata:
      SamResourceId: PostProcessingLambdaHookPermission
  SaveReportingDataFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: SaveReportingDataFunction
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for CloudWatch Metrics and Logs
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/b7f0aa437c1cadadde7d00964b103d4e
      Handler: index.handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 1024
      LoggingConfig:
        LogGroup:
          Ref: SaveReportingDataFunctionLogGroup
      Policies:
      - S3CrudPolicy:
          BucketName:
            Fn::If:
            - ShouldCreateReportingBucket
            - Ref: ReportingBucket
            - Ref: ReportingBucketName
      - S3ReadPolicy:
          BucketName:
            Ref: OutputBucket
      - DynamoDBReadPolicy:
          TableName:
            Ref: ConfigurationTable
      - Statement:
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          Resource: '*'
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - glue:CreateTable
          - glue:GetTable
          - glue:UpdateTable
          - glue:GetDatabase
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${GetLowercase.Lowercase}-reporting-db
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GetLowercase.Lowercase}-reporting-db/document_sections_*
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GetLowercase.Lowercase}-reporting-db/metering
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          METRIC_NAMESPACE:
            Ref: AWS::StackName
          STACK_NAME:
            Ref: AWS::StackName
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
  SaveReportingDataFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: SaveReportingDataFunctionLogGroup
  EvaluationFunctionDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600
    Metadata:
      SamResourceId: EvaluationFunctionDLQ
  EvaluationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: EvaluationFunction
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for CloudWatch Metrics and Logs
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/c1d364848c2ea6faccbe255df1b940d3
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - EvaluationFunctionDLQ
          - Arn
      LoggingConfig:
        LogGroup:
          Ref: EvaluationFunctionLogGroup
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          METRIC_NAMESPACE:
            Ref: AWS::StackName
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          PROCESSING_OUTPUT_BUCKET:
            Ref: OutputBucket
          EVALUATION_OUTPUT_BUCKET:
            Ref: OutputBucket
          REPORTING_BUCKET:
            Fn::If:
            - ShouldCreateReportingBucket
            - Ref: ReportingBucket
            - Ref: ReportingBucketName
          BASELINE_BUCKET:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
          SAVE_REPORTING_FUNCTION_NAME:
            Ref: SaveReportingDataFunction
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
          WORKING_BUCKET:
            Ref: WorkingBucket
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: ConfigurationTable
      - S3ReadPolicy:
          BucketName:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
      - S3CrudPolicy:
          BucketName:
            Ref: OutputBucket
      - S3CrudPolicy:
          BucketName:
            Ref: WorkingBucket
      - LambdaInvokePolicy:
          FunctionName:
            Ref: SaveReportingDataFunction
      - Statement:
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          Resource: '*'
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action: bedrock:InvokeModel
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
  EvaluationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: EvaluationFunctionLogGroup
  EvaluationFunctionRule:
    Type: AWS::Events::Rule
    Condition: IsEvaluationAutoEnabled
    Properties:
      EventPattern:
        source:
        - aws.states
        detail-type:
        - Step Functions Execution Status Change
        detail:
          stateMachineArn:
          - Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineArn
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineArn
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineArn
          status:
          - SUCCEEDED
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - EvaluationFunction
          - Arn
        Id: InvokeEvaluationFunction
        RetryPolicy:
          MaximumRetryAttempts: 3
    Metadata:
      SamResourceId: EvaluationFunctionRule
  EvaluationFunctionPermission:
    Type: AWS::Lambda::Permission
    Condition: IsEvaluationAutoEnabled
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: EvaluationFunction
      Principal:
        Fn::Sub: events.${AWS::URLSuffix}
      SourceArn:
        Fn::GetAtt:
        - EvaluationFunctionRule
        - Arn
    Metadata:
      SamResourceId: EvaluationFunctionPermission
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Workflow Alerts
      KmsMasterKeyId:
        Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: AlertsTopic
  WorkflowErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription:
        Fn::Sub: Alert when workflow errors exceed ${ErrorThreshold} in 5 minutes
      MetricName: ExecutionsFailedCount
      Namespace: AWS/States
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold:
        Ref: ErrorThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: StateMachineArn
        Value:
          Fn::If:
          - IsPattern3
          - Fn::GetAtt:
            - PATTERN3STACK
            - Outputs.StateMachineArn
          - Fn::If:
            - IsPattern2
            - Fn::GetAtt:
              - PATTERN2STACK
              - Outputs.StateMachineArn
            - Fn::GetAtt:
              - PATTERN1STACK
              - Outputs.StateMachineArn
      AlarmActions:
      - Ref: AlertsTopic
    Metadata:
      SamResourceId: WorkflowErrorsAlarm
  SlowExecutionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription:
        Fn::Sub: Alert when average execution time exceeds ${ExecutionTimeThresholdMs}
          milliseconds
      MetricName: ExecutionTime
      Namespace: AWS/States
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold:
        Ref: ExecutionTimeThresholdMs
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: StateMachineArn
        Value:
          Fn::If:
          - IsPattern3
          - Fn::GetAtt:
            - PATTERN3STACK
            - Outputs.StateMachineArn
          - Fn::If:
            - IsPattern2
            - Fn::GetAtt:
              - PATTERN2STACK
              - Outputs.StateMachineArn
            - Fn::GetAtt:
              - PATTERN1STACK
              - Outputs.StateMachineArn
      AlarmActions:
      - Ref: AlertsTopic
    Metadata:
      SamResourceId: SlowExecutionsAlarm
  MainTemplateSubsetDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName:
        Fn::Sub: ${AWS::StackName}-${AWS::Region}-MainTemplate-Subset
      DashboardBody:
        Fn::Sub:
        - "{\n  \"widgets\": [\n    {\n      \"type\": \"metric\",\n      \"x\": 0,\n\
          \      \"y\": 0,\n      \"width\": 8,\n      \"height\": 6,\n      \"properties\"\
          : {\n        \"metrics\": [\n          [\n            \"${AWS::StackName}\"\
          ,\n            \"QueueLatencyMilliseconds\",\n            {\n          \
          \    \"stat\": \"Average\"\n            }\n          ],\n          [\n \
          \           \".\",\n            \"QueueLatencyMilliseconds\",\n        \
          \    {\n              \"stat\": \"p90\"\n            }\n          ],\n \
          \         [\n            \".\",\n            \"QueueLatencyMilliseconds\"\
          ,\n            {\n              \"stat\": \"Maximum\"\n            }\n \
          \         ]\n        ],\n        \"region\": \"${AWS::Region}\",\n     \
          \   \"title\": \"Queue Latency\",\n        \"period\": 300,\n        \"\
          view\": \"timeSeries\",\n        \"annotations\": {\n          \"horizontal\"\
          : [\n            {\n              \"value\": ${ExecutionTimeThresholdMs\n\
          \              },\n              \"label\": \"Threshold (${ExecutionTimeThresholdMs}ms)\"\
          ,\n              \"color\": \"#ff0000\"\n            }\n          ]\n  \
          \      }\n      }\n    },\n    {\n      \"type\": \"metric\",\n      \"\
          x\": 8,\n      \"y\": 0,\n      \"width\": 8,\n      \"height\": 6,\n  \
          \    \"properties\": {\n        \"metrics\": [\n          [\n          \
          \  \"${AWS::StackName}\",\n            \"WorkflowLatencyMilliseconds\",\n\
          \            {\n              \"stat\": \"Average\"\n            }\n   \
          \       ],\n          [\n            \".\",\n            \"WorkflowLatencyMilliseconds\"\
          ,\n            {\n              \"stat\": \"p90\"\n            }\n     \
          \     ],\n          [\n            \".\",\n            \"WorkflowLatencyMilliseconds\"\
          ,\n            {\n              \"stat\": \"Maximum\"\n            }\n \
          \         ]\n        ],\n        \"region\": \"${AWS::Region}\",\n     \
          \   \"title\": \"Workflow Latency\",\n        \"period\": 300,\n       \
          \ \"view\": \"timeSeries\",\n        \"annotations\": {\n          \"horizontal\"\
          : [\n            {\n              \"value\": ${ExecutionTimeThresholdMs\n\
          \              },\n              \"label\": \"Threshold (${ExecutionTimeThresholdMs}ms)\"\
          ,\n              \"color\": \"#ff0000\"\n            }\n          ]\n  \
          \      }\n      }\n    },\n    {\n      \"type\": \"metric\",\n      \"\
          x\": 16,\n      \"y\": 0,\n      \"width\": 8,\n      \"height\": 6,\n \
          \     \"properties\": {\n        \"metrics\": [\n          [\n         \
          \   \"${AWS::StackName}\",\n            \"TotalLatencyMilliseconds\",\n\
          \            {\n              \"stat\": \"Average\"\n            }\n   \
          \       ],\n          [\n            \".\",\n            \"TotalLatencyMilliseconds\"\
          ,\n            {\n              \"stat\": \"p90\"\n            }\n     \
          \     ],\n          [\n            \".\",\n            \"TotalLatencyMilliseconds\"\
          ,\n            {\n              \"stat\": \"Maximum\"\n            }\n \
          \         ]\n        ],\n        \"region\": \"${AWS::Region}\",\n     \
          \   \"title\": \"Total Processing Latency\",\n        \"period\": 300,\n\
          \        \"view\": \"timeSeries\",\n        \"annotations\": {\n       \
          \   \"horizontal\": [\n            {\n              \"value\": ${ExecutionTimeThresholdMs\n\
          \              },\n              \"label\": \"Threshold (${ExecutionTimeThresholdMs}ms)\"\
          ,\n              \"color\": \"#ff0000\"\n            }\n          ]\n  \
          \      }\n      }\n    },\n    {\n      \"type\": \"metric\",\n      \"\
          x\": 0,\n      \"y\": 6,\n      \"width\": 8,\n      \"height\": 6,\n  \
          \    \"properties\": {\n        \"metrics\": [\n          [\n          \
          \  {\n              \"expression\": \"m1/PERIOD(m1)*60\",\n            \
          \  \"label\": \"Messages Received per Minute\",\n              \"id\": \"\
          e1\"\n            }\n          ],\n          [\n            {\n        \
          \      \"expression\": \"m2/PERIOD(m2)*60\",\n              \"label\": \"\
          Messages Deleted per Minute\",\n              \"id\": \"e2\"\n         \
          \   }\n          ],\n          [\n            \"AWS/SQS\",\n           \
          \ \"NumberOfMessagesReceived\",\n            \"QueueName\",\n          \
          \  \"${DocumentQueue.QueueName}\",\n            {\n              \"id\"\
          : \"m1\",\n              \"stat\": \"Sum\",\n              \"visible\":\
          \ false\n            }\n          ],\n          [\n            \".\",\n\
          \            \"NumberOfMessagesDeleted\",\n            \".\",\n        \
          \    \".\",\n            {\n              \"id\": \"m2\",\n            \
          \  \"stat\": \"Sum\",\n              \"visible\": false\n            }\n\
          \          ]\n        ],\n        \"region\": \"${AWS::Region}\",\n    \
          \    \"title\": \"SQS Queue Metrics (per Minute)\",\n        \"view\": \"\
          timeSeries\",\n        \"period\": 60,\n        \"yAxis\": {\n         \
          \ \"left\": {\n            \"label\": \"Count per Minute\"\n          }\n\
          \        }\n      }\n    },\n    {\n      \"type\": \"metric\",\n      \"\
          x\": 8,\n      \"y\": 6,\n      \"width\": 8,\n      \"height\": 6,\n  \
          \    \"properties\": {\n        \"metrics\": [\n          [\n          \
          \  {\n              \"expression\": \"m1/PERIOD(m1)*60\",\n            \
          \  \"label\": \"Started per Minute\",\n              \"id\": \"e1\"\n  \
          \          }\n          ],\n          [\n            {\n              \"\
          expression\": \"m2/PERIOD(m2)*60\",\n              \"label\": \"Succeeded\
          \ per Minute\",\n              \"id\": \"e2\"\n            }\n         \
          \ ],\n          [\n            {\n              \"expression\": \"m3/PERIOD(m3)*60\"\
          ,\n              \"label\": \"Failed per Minute\",\n              \"id\"\
          : \"e3\"\n            }\n          ],\n          [\n            \"AWS/States\"\
          ,\n            \"ExecutionsStarted\",\n            \"StateMachineArn\",\n\
          \            \"${StateMachineArn}\",\n            {\n              \"id\"\
          : \"m1\",\n              \"stat\": \"Sum\",\n              \"visible\":\
          \ false\n            }\n          ],\n          [\n            \".\",\n\
          \            \"ExecutionsSucceeded\",\n            \".\",\n            \"\
          .\",\n            {\n              \"id\": \"m2\",\n              \"stat\"\
          : \"Sum\",\n              \"visible\": false\n            }\n          ],\n\
          \          [\n            \".\",\n            \"ExecutionsFailed\",\n  \
          \          \".\",\n            \".\",\n            {\n              \"id\"\
          : \"m3\",\n              \"stat\": \"Sum\",\n              \"visible\":\
          \ false\n            }\n          ]\n        ],\n        \"region\": \"\
          ${AWS::Region}\",\n        \"title\": \"Workflow Executions (per Minute)\"\
          ,\n        \"view\": \"timeSeries\",\n        \"period\": 60,\n        \"\
          yAxis\": {\n          \"left\": {\n            \"label\": \"Count per Minute\"\
          \n          }\n        }\n      }\n    },\n    {\n      \"type\": \"log\"\
          ,\n      \"x\": 18,\n      \"y\": 6,\n      \"width\": 8,\n      \"height\"\
          : 6,\n      \"properties\": {\n        \"query\": \"SOURCE '${WorkflowTrackerLogGroup}'\
          \ | fields @timestamp, @message | filter @message like /Publishing latency\
          \ metrics/ | parse @message 'total: *ms' as totalTime |  filter totalTime\
          \ > ${ExecutionTimeThresholdMs} |  stats count(*) as high_latency_count\
          \ by bin(1m)\",\n        \"region\": \"${AWS::Region}\",\n        \"title\"\
          : \"Count of Workflow Executions over latency threshold (${ExecutionTimeThresholdMs}ms)\"\
          ,\n        \"stacked\": false,\n        \"view\": \"timeSeries\"\n     \
          \ }\n    },\n    {\n      \"type\": \"log\",\n      \"x\": 0,\n      \"\
          y\": 12,\n      \"width\": 24,\n      \"height\": 6,\n      \"properties\"\
          : {\n        \"query\": \"SOURCE '${StateMachineLogGroup}' | fields @timestamp,\
          \ @message | filter @message like /ExecutionFailed/ or @message like /TimedOut/\
          \ | parse @message /execution: (?<execution_arn>[^ ]*)/ | parse @message\
          \ /error: (?<error>[^\\\"]*)/| sort @timestamp desc | limit 20\",\n    \
          \    \"region\": \"${AWS::Region}\",\n        \"title\": \"Step Functions\
          \ Executions Failed\",\n        \"view\": \"table\"\n      }\n    },\n \
          \   {\n      \"type\": \"log\",\n      \"x\": 0,\n      \"y\": 18,\n   \
          \   \"width\": 12,\n      \"height\": 6,\n      \"properties\": {\n    \
          \    \"query\": \"SOURCE '${QueueSenderLogGroup}' | fields @timestamp, @logStream,\
          \ @message | filter @message like /ERROR/ | sort @timestamp desc | limit\
          \ 20\",\n        \"region\": \"${AWS::Region}\",\n        \"title\": \"\
          Queue Sender Lambda Errors\",\n        \"view\": \"table\"\n      }\n  \
          \  },\n    {\n      \"type\": \"log\",\n      \"x\": 12,\n      \"y\": 18,\n\
          \      \"width\": 12,\n      \"height\": 6,\n      \"properties\": {\n \
          \       \"query\": \"SOURCE '${QueueProcessorLogGroup}' | fields @timestamp,\
          \ @logStream, @message | filter @message like /ERROR/ | sort @timestamp\
          \ desc | limit 20\",\n        \"region\": \"${AWS::Region}\",\n        \"\
          title\": \"Queue Processor Lambda Errors\",\n        \"view\": \"table\"\
          \n      }\n    },\n    {\n      \"type\": \"log\",\n      \"x\": 0,\n  \
          \    \"y\": 24,\n      \"width\": 12,\n      \"height\": 6,\n      \"properties\"\
          : {\n        \"query\": \"SOURCE '${WorkflowTrackerLogGroup}' | fields @timestamp,\
          \ @logStream, @message | filter @message like /ERROR/ | sort @timestamp\
          \ desc | limit 20\",\n        \"region\": \"${AWS::Region}\",\n        \"\
          title\": \"Workflow Tracker Lambda Errors\",\n        \"view\": \"table\"\
          \n      }\n    },\n    {\n      \"type\": \"log\",\n      \"x\": 12,\n \
          \     \"y\": 24,\n      \"width\": 12,\n      \"height\": 6,\n      \"properties\"\
          : {\n        \"query\": \"SOURCE '${EvaluationFunctionLogGroup}' | fields\
          \ @timestamp, @logStream, @message | filter @message like /ERROR/ | sort\
          \ @timestamp desc | limit 20\",\n        \"region\": \"${AWS::Region}\"\
          ,\n        \"title\": \"Evaluation Tracker Lambda Errors\",\n        \"\
          view\": \"table\"\n      }\n    },\n    {\n      \"type\": \"log\",\n  \
          \    \"x\": 0,\n      \"y\": 30,\n      \"width\": 12,\n      \"height\"\
          : 6,\n      \"properties\": {\n        \"query\": \"SOURCE '${SaveReportingDataFunctionLogGroup}'\
          \ | fields @timestamp, @logStream, @message | filter @message like /ERROR/\
          \ | sort @timestamp desc | limit 20\",\n        \"region\": \"${AWS::Region}\"\
          ,\n        \"title\": \"Save Reporting Data Tracker Lambda Errors\",\n \
          \       \"view\": \"table\"\n      }\n    }\n  ]\n}\n"
        - StateMachineArn:
            Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineArn
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineArn
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineArn
          StateMachineLogGroup:
            Fn::If:
            - IsPattern3
            - Fn::GetAtt:
              - PATTERN3STACK
              - Outputs.StateMachineLogGroup
            - Fn::If:
              - IsPattern2
              - Fn::GetAtt:
                - PATTERN2STACK
                - Outputs.StateMachineLogGroup
              - Fn::GetAtt:
                - PATTERN1STACK
                - Outputs.StateMachineLogGroup
    Metadata:
      SamResourceId: MainTemplateSubsetDashboard
  DashboardMergerFunction:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: DashboardMergerFunction
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for CloudWatch Dashboards
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/3f9b6953553dd6d3c13199625993fb4d
      Handler: index.handler
      Runtime: python3.12
      Timeout: 60
      MemorySize: 128
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          STACK_NAME:
            Ref: AWS::StackName
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cloudwatch:GetDashboard
          - cloudwatch:ListDashboards
          - cloudwatch:PutDashboard
          - cloudwatch:DeleteDashboards
          Resource: '*'
  MergedDashboard:
    Type: Custom::DashboardMerger
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - DashboardMergerFunction
        - Arn
      Dashboard1Name:
        Ref: MainTemplateSubsetDashboard
      Dashboard2Name:
        Fn::If:
        - IsPattern3
        - Fn::GetAtt:
          - PATTERN3STACK
          - Outputs.DashboardName
        - Fn::If:
          - IsPattern2
          - Fn::GetAtt:
            - PATTERN2STACK
            - Outputs.DashboardName
          - Fn::GetAtt:
            - PATTERN1STACK
            - Outputs.DashboardName
      MergedDashboardName:
        Fn::Sub: ${AWS::StackName}-${AWS::Region}
      ChangeToForceUpdate: b42aff08fad64f74
    Metadata:
      SamResourceId: MergedDashboard
  LookupFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: LookupFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/ae9b87bbcc5d8b0006931d32a502345f
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      LoggingConfig:
        LogGroup:
          Ref: LookupFunctionLogGroup
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          TRACKING_TABLE:
            Ref: TrackingTable
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: TrackingTable
      - Statement:
        - Effect: Allow
          Action:
          - states:DescribeExecution
          - states:GetExecutionHistory
          Resource:
          - Fn::Sub:
            - arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:execution:${StateMachineName}*
            - StateMachineName:
                Fn::If:
                - IsPattern3
                - Fn::GetAtt:
                  - PATTERN3STACK
                  - Outputs.StateMachineName
                - Fn::If:
                  - IsPattern2
                  - Fn::GetAtt:
                    - PATTERN2STACK
                    - Outputs.StateMachineName
                  - Fn::GetAtt:
                    - PATTERN1STACK
                    - Outputs.StateMachineName
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  LookupFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: LookupFunctionLogGroup
  AgentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ExpiresAfter
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: AgentTable
  ExternalMCPAgentsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}/external-mcp-agents/credentials
      Description: 'Credentials for External MCP Agents - JSON array with required
        fields: mcp_url, cognito_user_pool_id, cognito_client_id, cognito_username,
        cognito_password. Optional fields: agent_name, agent_description'
      SecretString: '[]'
      KmsKeyId:
        Ref: CustomerManagedEncryptionKey
    Metadata:
      SamResourceId: ExternalMCPAgentsSecret
  AgentRequestHandlerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: AgentRequestHandlerFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/848de9d3dae6afe09ffb4bb3be9a042b
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          AGENT_TABLE:
            Ref: AgentTable
          AGENT_PROCESSOR_FUNCTION:
            Ref: AgentProcessorFunction
          DATA_RETENTION_DAYS:
            Ref: DataRetentionInDays
      LoggingConfig:
        LogGroup:
          Ref: AgentRequestHandlerLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AgentTable
      - LambdaInvokePolicy:
          FunctionName:
            Ref: AgentProcessorFunction
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  AgentRequestHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: AgentRequestHandlerLogGroup
  AgentProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: AgentProcessorFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W58
          reason: DLQ not required for Cfn Custom Resource function
        - id: W76
          reason: 'Suppressing W76: SPCM for IAM policy document is higher than 25'
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/adec4de07874de8ae1a2b85695ba9562
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
          STRANDS_LOG_LEVEL:
            Ref: LogLevel
          AGENT_TABLE:
            Ref: AgentTable
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          ATHENA_DATABASE:
            Ref: ReportingDatabase
          ATHENA_OUTPUT_LOCATION:
            Fn::Sub:
            - s3://${Bucket}/athena-results/
            - Bucket:
                Fn::If:
                - ShouldCreateReportingBucket
                - Ref: ReportingBucket
                - Ref: ReportingBucketName
          DOCUMENT_ANALYSIS_AGENT_MODEL_ID:
            Ref: DocumentAnalysisAgentModelId
          AWS_STACK_NAME:
            Ref: AWS::StackName
          GUARDRAIL_ID_AND_VERSION:
            Fn::If:
            - HasGuardrailConfig
            - Fn::Sub: ${BedrockGuardrailId}:${BedrockGuardrailVersion}
            - ''
      LoggingConfig:
        LogGroup:
          Ref: AgentProcessorLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AgentTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: ConfigurationTable
      - S3CrudPolicy:
          BucketName:
            Fn::If:
            - ShouldCreateReportingBucket
            - Ref: ReportingBucket
            - Ref: ReportingBucketName
      - Statement:
        - Effect: Allow
          Action:
          - athena:StartQueryExecution
          - athena:GetQueryExecution
          - athena:GetQueryResults
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary
          - Fn::Sub: arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:datacatalog/*
        - Effect: Allow
          Action:
          - glue:GetTable
          - glue:GetTables
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetPartitions
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${ReportingDatabase}
          - Fn::Sub: arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${ReportingDatabase}/*
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          - bedrock:InvokeModelWithResponseStream
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
        - Fn::If:
          - HasGuardrailConfig
          - Effect: Allow
            Action:
            - bedrock:ApplyGuardrail
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}
          - Ref: AWS::NoValue
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - bedrock-agentcore:StartCodeInterpreterSession
          - bedrock-agentcore:StopCodeInterpreterSession
          - bedrock-agentcore:InvokeCodeInterpreter
          - bedrock-agentcore:GetCodeInterpreterSession
          - bedrock-agentcore:ListCodeInterpreterSessions
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock-agentcore:*:aws:code-interpreter/*
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
          - Ref: ExternalMCPAgentsSecret
  AgentProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: AgentProcessorLogGroup
  ListAvailableAgentsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ListAvailableAgentsFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with local
            agent factory
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/1eaeefc1c1efb90529e442653e43ad50
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          AWS_STACK_NAME:
            Ref: AWS::StackName
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
          - Ref: ExternalMCPAgentsSecret
        - Effect: Allow
          Action:
          - kms:Decrypt
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
      LoggingConfig:
        LogGroup:
          Ref: ListAvailableAgentsLogGroup
  ListAvailableAgentsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: ListAvailableAgentsLogGroup
  ListAvailableAgentsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listAvailableAgents
      DataSourceName:
        Fn::GetAtt:
        - ListAvailableAgentsDataSource
        - Name
    Metadata:
      SamResourceId: ListAvailableAgentsResolver
  ListAvailableAgentsDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: ListAvailableAgentsDataSource
      Description: Lambda function for listing available agents
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - ListAvailableAgentsFunction
          - Arn
    Metadata:
      SamResourceId: ListAvailableAgentsDataSource
  SubmitAgentQueryResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: submitAgentQuery
      DataSourceName:
        Fn::GetAtt:
        - AgentRequestHandlerDataSource
        - Name
    Metadata:
      SamResourceId: SubmitAgentQueryResolver
  AgentRequestHandlerDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: AgentRequestHandlerDataSource
      Description: Lambda function for handling agent query requests
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - AgentRequestHandlerFunction
          - Arn
    Metadata:
      SamResourceId: AgentRequestHandlerDataSource
  GetAgentJobStatusResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: getAgentJobStatus
      DataSourceName:
        Fn::GetAtt:
        - AgentTableDataSource
        - Name
      RequestMappingTemplate: "#set($userId = $context.identity.username)\n#if(!$userId)\n\
        \  #set($userId = $context.identity.sub)\n#end\n#if(!$userId)\n  #set($userId\
        \ = \"anonymous\")\n#end\n{\n  \"version\": \"2018-05-29\",\n  \"operation\"\
        : \"GetItem\",\n  \"key\": {\n    \"PK\": $util.dynamodb.toDynamoDBJson(\"\
        agent#${userId}\"),\n    \"SK\": $util.dynamodb.toDynamoDBJson($ctx.args.jobId)\n\
        \  }\n}\n"
      ResponseMappingTemplate: "#if(!$ctx.result)\n  null\n#else\n  {\n    \"jobId\"\
        : $util.toJson($ctx.result.SK),\n    \"status\": $util.toJson($ctx.result.status),\n\
        \    \"query\": $util.toJson($ctx.result.query),\n    \"agentIds\": $util.toJson($ctx.result.agentIds),\n\
        \    \"createdAt\": $util.toJson($ctx.result.createdAt),\n    \"completedAt\"\
        : $util.toJson($ctx.result.completedAt),\n    \"result\": $util.toJson($ctx.result.result),\n\
        \    \"error\": $util.toJson($ctx.result.error),\n    \"agent_messages\":\
        \ $util.toJson($ctx.result.agent_messages)\n  }\n#end\n"
    Metadata:
      SamResourceId: GetAgentJobStatusResolver
  ListAgentJobsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listAgentJobs
      DataSourceName:
        Fn::GetAtt:
        - AgentTableDataSource
        - Name
      RequestMappingTemplate: "#set($userId = $context.identity.username)\n#if(!$userId)\n\
        \  #set($userId = $context.identity.sub)\n#end\n#if(!$userId)\n  #set($userId\
        \ = \"anonymous\")\n#end\n{\n  \"version\": \"2018-05-29\",\n  \"operation\"\
        : \"Query\",\n  \"query\": {\n    \"expression\": \"PK = :pk\",\n    \"expressionValues\"\
        : {\n      \":pk\": $util.dynamodb.toDynamoDBJson(\"agent#${userId}\")\n \
        \   }\n  },\n  #if($ctx.args.limit)\n    \"limit\": $ctx.args.limit,\n  #end\n\
        \  #if($ctx.args.nextToken)\n    \"nextToken\": \"$ctx.args.nextToken\",\n\
        \  #end\n  \"scanIndexForward\": false\n}\n"
      ResponseMappingTemplate: "{\n  \"items\": [\n    #foreach($item in $ctx.result.items)\n\
        \      {\n        \"jobId\": $util.toJson($item.SK),\n        \"status\":\
        \ $util.toJson($item.status),\n        \"query\": $util.toJson($item.query),\n\
        \        \"agentIds\": $util.toJson($item.agentIds),\n        \"createdAt\"\
        : $util.toJson($item.createdAt),\n        \"completedAt\": $util.toJson($item.completedAt),\n\
        \        \"result\": $util.toJson($item.result),\n        \"error\": $util.toJson($item.error)\n\
        \      }#if($foreach.hasNext),#end\n    #end\n  ],\n  \"nextToken\": $util.toJson($ctx.result.nextToken)\n\
        }\n"
    Metadata:
      SamResourceId: ListAgentJobsResolver
  UpdateAgentJobStatusResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Mutation
      FieldName: updateAgentJobStatus
      DataSourceName:
        Fn::GetAtt:
        - AgentTableDataSource
        - Name
      RequestMappingTemplate: "#set($userId = $ctx.args.userId)\n#set($expNames =\
        \ {})\n#set($expValues = {})\n\n## Set status (required)\n$util.qr($expNames.put(\"\
        #status\", \"status\"))\n$util.qr($expValues.put(\":status\", $util.dynamodb.toDynamoDB($ctx.args.status)))\n\
        #set($updateExpression = \"SET #status = :status\")\n\n## Set result (optional)\n\
        #if($ctx.args.result)\n  $util.qr($expNames.put(\"#result\", \"result\"))\n\
        \  $util.qr($expValues.put(\":result\", $util.dynamodb.toDynamoDB($ctx.args.result)))\n\
        \  #set($updateExpression = \"${updateExpression}, #result = :result\")\n\
        #end\n\n## Set completedAt to current timestamp when status is COMPLETED or\
        \ FAILED\n#if($ctx.args.status == \"COMPLETED\" || $ctx.args.status == \"\
        FAILED\")\n  $util.qr($expNames.put(\"#completedAt\", \"completedAt\"))\n\
        \  $util.qr($expValues.put(\":completedAt\", $util.dynamodb.toDynamoDB($util.time.nowISO8601())))\n\
        \  #set($updateExpression = \"${updateExpression}, #completedAt = :completedAt\"\
        )\n#end\n\n{\n  \"version\": \"2018-05-29\",\n  \"operation\": \"UpdateItem\"\
        ,\n  \"key\": {\n    \"PK\": $util.dynamodb.toDynamoDBJson(\"agent#${userId}\"\
        ),\n    \"SK\": $util.dynamodb.toDynamoDBJson($ctx.args.jobId)\n  },\n  \"\
        update\": {\n    \"expression\": \"$updateExpression\",\n    \"expressionNames\"\
        : $utils.toJson($expNames),\n    \"expressionValues\": $utils.toJson($expValues)\n\
        \  }\n}"
      ResponseMappingTemplate: "#if($ctx.error)\n  $util.error($ctx.error.message,\
        \ $ctx.error.type)\n#end\n\n## Return false if no item was updated (item not\
        \ found)\n#if(!$ctx.result)\n  false\n#else\n  true\n#end"
    Metadata:
      SamResourceId: UpdateAgentJobStatusResolver
  DeleteAgentJobResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Mutation
      FieldName: deleteAgentJob
      DataSourceName:
        Fn::GetAtt:
        - AgentTableDataSource
        - Name
      RequestMappingTemplate: "#set($userId = $context.identity.username)\n#if(!$userId)\n\
        \  #set($userId = $context.identity.sub)\n#end\n#if(!$userId)\n  #set($userId\
        \ = \"anonymous\")\n#end\n{\n  \"version\": \"2018-05-29\",\n  \"operation\"\
        : \"DeleteItem\",\n  \"key\": {\n    \"PK\": $util.dynamodb.toDynamoDBJson(\"\
        agent#${userId}\"),\n    \"SK\": $util.dynamodb.toDynamoDBJson($ctx.args.jobId)\n\
        \  }\n}"
      ResponseMappingTemplate: "#if($ctx.error)\n  $util.error($ctx.error.message,\
        \ $ctx.error.type)\n#else\n  true\n#end"
    Metadata:
      SamResourceId: DeleteAgentJobResolver
  AgentTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: AgentTableDataSource
      Description: DynamoDB table for agent job tracking
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      DynamoDBConfig:
        TableName:
          Ref: AgentTable
        AwsRegion:
          Ref: AWS::Region
    Metadata:
      SamResourceId: AgentTableDataSource
  UserPool:
    Type: AWS::Cognito::UserPool
    Metadata:
      cfn-nag:
        rules_to_suppress:
        - id: W57
          reason: MFA configurations specific to target environment - disabled by
            default
      SamResourceId: UserPool
    Properties:
      UserPoolName:
        Fn::Sub: ${AWS::StackName}-users
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly:
          Fn::If:
          - ShouldAllowSignUpEmailDomain
          - false
          - true
        InviteMessageTemplate:
          EmailSubject: Welcome to GenAI-IDP!
          EmailMessage:
            Fn::Sub: '<p>Hello {username},</p>

              <p>Welcome to the AWS GenAIIDP Solution! Your temporary password is:
              <strong>{####}</strong></p>

              <p>When the CloudFormation stack is COMPLETE, use the link below to
              log in and set your permanent password.

              <p>     https://${CloudFrontDistribution.DomainName}/

              <p>

              <p>If you have not previously done so, you must request access to the
              following Amazon Bedrock models: Amazon: Titan Text Embeddings V2, Amazon:
              Nova models, Anthropic: Claude 3, 3.x, and 4.x models. (https://docs.aws.amazon.com/bedrock/latest/userguide/model-access.html)

              <p>

              <p>Thanks,</p>

              <p>AWS GenAIIDP Team</p>

              <p>

              <p><em>Stack: ${AWS::StackName}, v0.3.17, 2025-09-27 00:35:24</em>'
      AutoVerifiedAttributes:
      - email
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      EmailVerificationMessage: Please verify your email to complete account registration.
        Confirmation Code {####}.
      EmailVerificationSubject: Account Verification
      LambdaConfig:
        Fn::If:
        - ShouldAllowSignUpEmailDomain
        - PreAuthentication:
            Fn::GetAtt:
            - CognitoUserPoolEmailDomainVerifyFunction
            - Arn
          PreSignUp:
            Fn::GetAtt:
            - CognitoUserPoolEmailDomainVerifyFunction
            - Arn
        - Ref: AWS::NoValue
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
      - Name: email
        AttributeDataType: String
        Mutable: false
        Required: true
      UsernameConfiguration:
        CaseSensitive: false
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName:
        Fn::Sub: ${AWS::StackName}-Client
      AllowedOAuthFlows:
      - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - openid
      - email
      - phone
      - profile
      CallbackURLs:
      - http://localhost:3000
      AccessTokenValidity: 1
      EnableTokenRevocation: true
      ExplicitAuthFlows:
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      IdTokenValidity: 1
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
      - email
      - email_verified
      - preferred_username
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
      - COGNITO
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: UserPoolClient
  GetDomainLambda:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
      SamResourceId: GetDomainLambda
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Description: Converts Stackname to lowercase and adds unique timestamp
      Handler: index.handler
      Runtime: python3.12
      Timeout: 30
      MemorySize: 128
      LoggingConfig:
        LogGroup:
          Ref: GetDomainLambdaLogGroup
      InlineCode: "import cfnresponse\nimport time\ndef handler(event, context): \
        \                                                   \n    lowercase = event['ResourceProperties'].get('InputString',\
        \ '').lower()\n    lowercaseWithTimestamp = f\"{lowercase}-{time.time_ns()}\"\
        \ # make unique\n    responseData = {\n      'Lowercase': lowercase, \n  \
        \    'OutputString': lowercaseWithTimestamp, # don't change key - avoid UserPool\
        \ update errors\n    }                                            \n    cfnresponse.send(event,\
        \ context, cfnresponse.SUCCESS, responseData)\n"
  GetDomainLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: GetDomainLambdaLogGroup
  GetDomain:
    Type: Custom::GetDomain
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - GetDomainLambda
        - Arn
      InputString:
        Ref: AWS::StackName
    Metadata:
      SamResourceId: GetDomain
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain:
        Fn::GetAtt:
        - GetDomain
        - OutputString
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: UserPoolDomain
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName:
        Fn::Sub: ${AWS::StackName}-IdentityPool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
      - ClientId:
          Ref: UserPoolClient
        ProviderName:
          Fn::GetAtt:
          - UserPool
          - ProviderName
    Metadata:
      SamResourceId: IdentityPool
  CognitoIdentityPoolSetRole:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        authenticated:
          Fn::GetAtt:
          - CognitoAuthorizedRole
          - Arn
    Metadata:
      SamResourceId: CognitoIdentityPoolSetRole
  CognitoAuthorizedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: cognito-identity.amazonaws.com
          Action:
          - sts:AssumeRoleWithWebIdentity
          Condition:
            StringEquals:
              cognito-identity.amazonaws.com:aud:
                Ref: IdentityPool
            ForAnyValue:StringLike:
              cognito-identity.amazonaws.com:amr: authenticated
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: S3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${OutputBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${OutputBucket}/*
            - Fn::Sub: arn:${AWS::Partition}:s3:::${InputBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${InputBucket}/*
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ConfigurationBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ConfigurationBucket}/*
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource:
              Fn::GetAtt:
              - CustomerManagedEncryptionKey
              - Arn
      - PolicyName: ParameterStore
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SettingsParameter}
      - PolicyName: GraphQL
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - appsync:GraphQL
            Resource:
            - Fn::Sub: ${GraphQLApi.Arn}/types/Query/*
            - Fn::Sub: ${GraphQLApi.Arn}/types/Subscription/*
    Metadata:
      SamResourceId: CognitoAuthorizedRole
  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    DependsOn: CognitoUserPoolEmailDomainVerifyPermissionReady
    Properties:
      DesiredDeliveryMediums:
      - EMAIL
      UserAttributes:
      - Name: email
        Value:
          Ref: AdminEmail
      Username:
        Ref: AdminEmail
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: AdminUser
  CognitoUserPoolEmailDomainVerifyPermissionReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      ConditionalDependency:
        Fn::If:
        - ShouldAllowSignUpEmailDomain
        - Ref: CognitoUserPoolEmailDomainVerifyPermission
        - ''
      SamResourceId: CognitoUserPoolEmailDomainVerifyPermissionReady
  AdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Administrators
      GroupName: Admin
      Precedence: 0
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: AdminGroup
  AdminUserToGroupAttachment:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    Properties:
      GroupName:
        Ref: AdminGroup
      Username:
        Ref: AdminUser
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: AdminUserToGroupAttachment
  CognitoUserPoolEmailDomainVerifyFunction:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
      SamResourceId: CognitoUserPoolEmailDomainVerifyFunction
    Condition: ShouldAllowSignUpEmailDomain
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Description: Verifies email address is in allowed domain
      Handler: index.lambda_handler
      Runtime: python3.12
      Timeout: 10
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          ALLOWED_SIGNUP_EMAIL_DOMAINS:
            Ref: AllowedSignUpEmailDomain
      InlineCode: "import os\nimport boto3\nimport json\ndef lambda_handler(event,\
        \ context):\n    print(json.dumps(event))\n    allowed_domains = [\n     \
        \   domain.strip() \n        for domain in os.environ.get('ALLOWED_SIGNUP_EMAIL_DOMAINS',\
        \ '').split(',')\n    ]\n    user_attributes = event.get('request', {}).get('userAttributes',\
        \ {})\n    email = user_attributes.get('email')\n    if not email or '@' not\
        \ in email:\n        raise ValueError('Username does not exist or invalid\
        \ email address')\n    email_domain = email.split('@')[1]\n    if not email_domain\
        \ or not allowed_domains:\n        raise ValueError('Server error - invalid\
        \ configuration')\n    if email_domain not in allowed_domains:\n        raise\
        \ ValueError('Invalid email address domain')\n    return event\n"
      LoggingConfig:
        LogGroup:
          Ref: CognitoUserPoolEmailDomainVerifyFunctionLogGroup
  CognitoUserPoolEmailDomainVerifyFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: CognitoUserPoolEmailDomainVerifyFunctionLogGroup
  CognitoUserPoolEmailDomainVerifyPermission:
    Type: AWS::Lambda::Permission
    Condition: ShouldAllowSignUpEmailDomain
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: CognitoUserPoolEmailDomainVerifyFunction
      Principal:
        Fn::Sub: cognito-idp.${AWS::URLSuffix}
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
    Metadata:
      SamResourceId: CognitoUserPoolEmailDomainVerifyPermission
  UserPoolClienta2i:
    Type: AWS::Cognito::UserPoolClient
    Condition: IsHITLEnabled
    Properties:
      ClientName:
        Fn::Sub: ${AWS::StackName}-A2I-Client
      GenerateSecret: true
      UserPoolId:
        Ref: UserPool
    Metadata:
      SamResourceId: UserPoolClienta2i
  PrivateWorkteam:
    Type: AWS::SageMaker::Workteam
    Condition: ShouldCreatePrivateWorkteam
    Properties:
      WorkteamName:
        Fn::Sub: ${AWS::StackName}-Private-WorkTeam
      Description: Private workteam for working on A2I tasks
      MemberDefinitions:
      - CognitoMemberDefinition:
          CognitoUserPool:
            Ref: UserPool
          CognitoUserGroup:
            Ref: AdminGroup
          CognitoClientId:
            Ref: UserPoolClienta2i
    Metadata:
      SamResourceId: PrivateWorkteam
  CognitoClientUpdaterRole:
    Type: AWS::IAM::Role
    Condition: ShouldCreatePrivateWorkteam
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Write access required for Cognito client updates and SageMaker workteam
            integration - resource constraints not applicable for these service operations
      SamResourceId: CognitoClientUpdaterRole
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: lambda.${AWS::URLSuffix}
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: CognitoClientUpdaterPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cognito-idp:UpdateUserPoolClient
            - cognito-idp:DescribeUserPoolClient
            - sagemaker:DescribeWorkteam
            Resource: '*'
  CognitoClientUpdaterFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: ShouldCreatePrivateWorkteam
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      LogGroupName:
        Fn::Sub: /${AWS::StackName}/lambda/CognitoClientUpdaterFunction
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: CognitoClientUpdaterFunctionLogGroup
  CognitoClientUpdaterFunction:
    DependsOn:
    - UserPoolClienta2i
    Type: AWS::Serverless::Function
    Condition: ShouldCreatePrivateWorkteam
    Metadata:
      SamResourceId: CognitoClientUpdaterFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W58
          reason: DLQ not required for Cfn Custom Resource function
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Description: Update Cognito App Client with SageMaker GroundTruth Labelling
        WorkForce Private Work Team
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/9cdb7a51d8c6c1f27fe37a9315af444d
      Handler: index.handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 4096
      LoggingConfig:
        LogGroup:
          Ref: CognitoClientUpdaterFunctionLogGroup
      Role:
        Fn::GetAtt:
        - CognitoClientUpdaterRole
        - Arn
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: UserPool
          CLIENT_ID:
            Ref: UserPoolClienta2i
          WORKTEAM_NAME:
            Fn::GetAtt: PrivateWorkteam.WorkteamName
  CognitoClientCustomResource:
    Type: Custom::CognitoClientUpdater
    Condition: ShouldCreatePrivateWorkteam
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CognitoClientUpdaterFunction
        - Arn
      SourceCodeHash: 721c81ef511dd4b9
    DependsOn:
    - UserPoolClienta2i
    - PrivateWorkteam
    - CognitoClientUpdaterFunction
    Metadata:
      SamResourceId: CognitoClientCustomResource
  A2IFlowDefinitionRole:
    Type: AWS::IAM::Role
    Condition: IsHITLEnabled
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: sagemaker.${AWS::URLSuffix}
          Action: sts:AssumeRole
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: A2IFlowDefinitionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource:
            - Fn::Sub: ${OutputBucket.Arn}/*
            - Fn::Sub: ${InputBucket.Arn}/*
          - Effect: Allow
            Action:
            - s3:GetBucketLocation
            - s3:ListBucket
            Resource:
            - Fn::GetAtt:
              - OutputBucket
              - Arn
            - Fn::GetAtt:
              - InputBucket
              - Arn
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
              Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource:
              Fn::GetAtt:
              - CustomerManagedEncryptionKey
              - Arn
    Metadata:
      SamResourceId: A2IFlowDefinitionRole
  A2IHumanTaskUILambdaRole:
    Type: AWS::IAM::Role
    Condition: IsHITLEnabled
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for SageMaker A2I operations as
            resource name is not available
      SamResourceId: A2IHumanTaskUILambdaRole
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: lambda.${AWS::URLSuffix}
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: SageMakerA2IAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sagemaker:CreateHumanTaskUi
            - sagemaker:DeleteHumanTaskUi
            - sagemaker:DescribeHumanTaskUi
            - sagemaker:CreateFlowDefinition
            - sagemaker:DeleteFlowDefinition
            - sagemaker:DescribeFlowDefinition
            - sagemaker:ListHumanLoops
            - sagemaker:StopHumanLoop
            - sagemaker:DescribeWorkteam
            - sagemaker:DeleteWorkteam
            - sagemaker:ListWorkforces
            - sagemaker:DescribeWorkforce
            - sagemaker:DeleteWorkforce
            Resource: '*'
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:
              Fn::GetAtt:
              - A2IFlowDefinitionRole
              - Arn
      - PolicyName: S3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetBucketLocation
            - s3:GetObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${OutputBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${OutputBucket}/*
            - Fn::Sub: arn:${AWS::Partition}:s3:::${InputBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${InputBucket}/*
      - PolicyName: LambdaSSMAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:PutParameter
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FlowDefinitionArn
      - PolicyName: KMSAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource:
              Fn::GetAtt:
              - CustomerManagedEncryptionKey
              - Arn
      - PolicyName: CFNCustomAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:PutObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::cloudformation-custom-resource-response-*
            - Fn::Sub: arn:${AWS::Partition}:s3:::cloudformation-custom-resource-response-*/*
  CreateA2IResourcesLambda:
    Type: AWS::Serverless::Function
    Condition: IsHITLEnabled
    Metadata:
      SamResourceId: CreateA2IResourcesLambda
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W58
          reason: DLQ not required for Cfn Custom Resource function
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/11f66ef0b29a1d13d7f5299dfeda8151
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - A2IHumanTaskUILambdaRole
        - Arn
      Runtime: python3.12
      Timeout: 900
      Environment:
        Variables:
          STACK_NAME:
            Ref: AWS::StackName
          A2I_WORKTEAM_ARN:
            Fn::If:
            - ShouldCreatePrivateWorkteam
            - Fn::Sub: arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:workteam/private-crowd/${PrivateWorkteam.WorkteamName}
            - Ref: ExistingPrivateWorkforceArn
          A2I_FLOW_DEFINITION_ROLE_ARN:
            Fn::GetAtt:
            - A2IFlowDefinitionRole
            - Arn
          BDA_OUTPUT_BUCKET:
            Ref: OutputBucket
  A2IResourcesCustomResource:
    Type: Custom::A2IResources
    Condition: IsHITLEnabled
    Properties:
      ServiceToken:
        Fn::GetAtt: CreateA2IResourcesLambda.Arn
      StackName:
        Ref: AWS::StackName
      SourceCodeHash: '085a387a4e97fdf6'
    Metadata:
      SamResourceId: A2IResourcesCustomResource
  GetWorkforceURLFunction:
    Type: AWS::Serverless::Function
    Condition: IsHITLEnabled
    Metadata:
      SamResourceId: GetWorkforceURLFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/8036305295b1237cc6739562fab97938
      Description: Lambda function to get the SageMaker Ground Truth workforce portal
        URL
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          REGION:
            Ref: AWS::Region
          LOG_LEVEL: INFO
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sagemaker:DescribeWorkteam
          Resource:
            Fn::If:
            - ShouldCreatePrivateWorkteam
            - Fn::Sub: arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:workteam/private-crowd/${PrivateWorkteam.WorkteamName}
            - Ref: ExistingPrivateWorkforceArn
  WorkforceURLResource:
    Type: Custom::WorkforceURL
    Condition: IsHITLEnabled
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - GetWorkforceURLFunction
        - Arn
      WorkteamName:
        Fn::If:
        - ShouldCreatePrivateWorkteam
        - Fn::GetAtt:
          - PrivateWorkteam
          - WorkteamName
        - Fn::Select:
          - 2
          - Fn::Split:
            - /
            - Ref: ExistingPrivateWorkforceArn
      SourceCodeHash: 1c4558472ad35565
    Metadata:
      SamResourceId: WorkforceURLResource
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-api
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        UserPoolId:
          Ref: UserPool
        AwsRegion:
          Ref: AWS::Region
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
      - AuthenticationType: AWS_IAM
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - AppSyncCwlRole
          - Arn
        ExcludeVerboseContent: false
        FieldLogLevel:
          Fn::FindInMap:
          - AppSyncLogLevelMap
          - Ref: LogLevel
          - FieldLogLevel
      IntrospectionConfig: DISABLED
    Metadata:
      SamResourceId: GraphQLApi
  GraphQLApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      LogGroupName:
        Fn::Sub: /aws/appsync/apis/${GraphQLApi.ApiId}
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: GraphQLApiLogGroup
  AppSyncCwlRole:
    DependsOn:
    - IsStacknameLengthOK
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - Fn::Sub: appsync.${AWS::URLSuffix}
    Metadata:
      SamResourceId: AppSyncCwlRole
  WAFIPV4Set:
    Type: AWS::WAFv2::IPSet
    Condition: IsWafEnabled
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-allowed-ips
      Description: IP ranges allowed to access the AppSync API
      Scope: REGIONAL
      IPAddressVersion: IPV4
      Addresses:
      - Ref: WAFAllowedIPv4Ranges
    Metadata:
      SamResourceId: WAFIPV4Set
  WAFLambdaServiceIPSet:
    Type: AWS::WAFv2::IPSet
    Condition: IsWafEnabled
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-lambda-service-ips
      Description: IP ranges used by AWS Lambda service
      Scope: REGIONAL
      IPAddressVersion: IPV4
      Addresses:
      - '0.0.0.0/32'
    Metadata:
      SamResourceId: WAFLambdaServiceIPSet
  IPSetUpdaterFunction:
    Type: AWS::Serverless::Function
    Condition: IsWafEnabled
    Metadata:
      SamResourceId: IPSetUpdaterFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/4a1525c7df91a2ba35b683dcb4b60f6a
      Handler: index.lambda_handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 256
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          IPSET_NAME:
            Fn::Sub: ${AWS::StackName}-lambda-service-ips
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - wafv2:GetIPSet
          - wafv2:UpdateIPSet
          Resource:
            Fn::GetAtt:
            - WAFLambdaServiceIPSet
            - Arn
        - Effect: Allow
          Action:
          - wafv2:ListIPSets
          Resource:
            Fn::Sub: arn:${AWS::Partition}:wafv2:${AWS::Region}:${AWS::AccountId}:regional/ipset/*
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
            Description: Update Lambda IP ranges daily
            Enabled: true
  IPSetUpdaterCustomResource:
    Type: Custom::IPSetUpdater
    Condition: IsWafEnabled
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - IPSetUpdaterFunction
        - Arn
      UpdateTime: '2025-09-27 00:35:24'
    Metadata:
      SamResourceId: IPSetUpdaterCustomResource
  WAFWebACL:
    Type: AWS::WAFv2::WebACL
    Condition: IsWafEnabled
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-appsync-acl
      Description: Web ACL for AppSync API
      Scope: REGIONAL
      DefaultAction:
        Block: {}
      Rules:
      - Name: AllowLambdaServiceIPs
        Priority: 1
        Statement:
          IPSetReferenceStatement:
            Arn:
              Fn::GetAtt:
              - WAFLambdaServiceIPSet
              - Arn
        Action:
          Allow: {}
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName: AllowLambdaServiceIPsRule
      - Name: AllowListedIPs
        Priority: 2
        Statement:
          IPSetReferenceStatement:
            Arn:
              Fn::GetAtt:
              - WAFIPV4Set
              - Arn
        Action:
          Allow: {}
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName: AllowListedIPsRule
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: APIAccessControl
    Metadata:
      SamResourceId: WAFWebACL
  WAFWebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Condition: IsWafEnabled
    Properties:
      ResourceArn:
        Fn::GetAtt:
        - GraphQLApi
        - Arn
      WebACLArn:
        Fn::GetAtt:
        - WAFWebACL
        - Arn
    Metadata:
      SamResourceId: WAFWebACLAssociation
  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DefinitionS3Location: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/f6089eecc6a1e0a0243373a53819c791
    Metadata:
      SamResourceId: GraphQLSchema
  TrackingTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: TrackingTableDataSource
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      DynamoDBConfig:
        TableName:
          Ref: TrackingTable
        AwsRegion:
          Ref: AWS::Region
    Metadata:
      SamResourceId: TrackingTableDataSource
  DiscoveryTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: DiscoveryTableDataSource
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      DynamoDBConfig:
        TableName:
          Ref: DiscoveryTrackingTable
        AwsRegion:
          Ref: AWS::Region
    Metadata:
      SamResourceId: DiscoveryTableDataSource
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W76
          reason: 'Suppressing W76: SPCM for IAM policy document is higher than 25'
      SamResourceId: AppSyncServiceRole
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: appsync.${AWS::URLSuffix}
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: DynamoDBAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TrackingTable}
            - Fn::Sub: arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AgentTable}
            - Fn::Sub: arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DiscoveryTrackingTable}
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource:
              Fn::GetAtt:
              - CustomerManagedEncryptionKey
              - Arn
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - GetFileContentsResolverFunction
              - Arn
            - Fn::GetAtt:
              - GetStepFunctionExecutionResolverFunction
              - Arn
            - Fn::GetAtt:
              - ConfigurationResolverFunction
              - Arn
            - Fn::GetAtt:
              - UploadResolverFunction
              - Arn
            - Fn::GetAtt:
              - CopyToBaselineResolverFunction
              - Arn
            - Fn::GetAtt:
              - CreateDocumentResolverFunction
              - Arn
            - Fn::GetAtt:
              - DeleteDocumentResolverFunction
              - Arn
            - Fn::GetAtt:
              - QueryKnowledgeBaseResolverFunction
              - Arn
            - Fn::GetAtt:
              - ReprocessDocumentResolverFunction
              - Arn
            - Fn::GetAtt:
              - ProcessChangesResolverFunction
              - Arn
            - Fn::GetAtt:
              - AgentRequestHandlerFunction
              - Arn
            - Fn::GetAtt:
              - ListAvailableAgentsFunction
              - Arn
            - Fn::GetAtt:
              - ChatWithDocumentResolverFunction
              - Arn
            - Fn::GetAtt:
              - DiscoveryUploadResolverFunction
              - Arn
  CreateDocumentResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: CreateDocumentResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/d83adc26cc33159cc5dcabaacab533e2
      Description: Lambda function to create document tracking via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          TRACKING_TABLE_NAME:
            Ref: TrackingTable
      LoggingConfig:
        LogGroup:
          Ref: CreateDocumentResolverFunctionLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  CreateDocumentResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: CreateDocumentResolverFunctionLogGroup
  CreateDocumentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Mutation
      FieldName: createDocument
      DataSourceName:
        Fn::GetAtt:
        - CreateDocumentDataSource
        - Name
    Metadata:
      SamResourceId: CreateDocumentResolver
  CreateDocumentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: CreateDocumentDataSource
      Description: Lambda function for creating document tracking records
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - CreateDocumentResolverFunction
          - Arn
    Metadata:
      SamResourceId: CreateDocumentDataSource
  UpdateDocumentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Mutation
      FieldName: updateDocument
      DataSourceName:
        Fn::GetAtt:
        - TrackingTableDataSource
        - Name
      RequestMappingTemplate: "#set( $PK = \"doc#${ctx.args.input.ObjectKey}\" )\n\
        #set( $expNames = {} )\n#set( $expValues = {} )\n#set( $expSet = {} )\n##\
        \ Iterate through each argument with values and update expression variables\
        \ **\n#foreach( $entry in $ctx.args.input.entrySet() )\n    ## skip empty\
        \ values **\n    #if( !$util.isNullOrBlank($entry.value)  )\n        $util.qr(\
        \ $expSet.put(\"#${entry.key}\", \":${entry.key}\") )\n        $util.qr( $expNames.put(\"\
        #${entry.key}\", \"${entry.key}\") )\n        $util.qr( $expValues.put(\"\
        :${entry.key}\", $util.dynamodb.toDynamoDB($entry.value)) )\n    #end\n#end\n\
        ## Start building the update expression, starting with attributes we're going\
        \ to SET **\n#set( $expression = \"\" )\n#if( !${expSet.isEmpty()} )\n   \
        \ #set( $expression = \"SET\" )\n    #foreach( $entry in $expSet.entrySet()\
        \ )\n        #set( $expression = \"${expression} ${entry.key} = ${entry.value}\"\
        \ )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"\
        ${expression},\" )\n        #end\n    #end\n#end\n{\n    \"version\" : \"\
        2018-05-29\",\n    \"operation\" : \"UpdateItem\",\n    \"key\" : {\n    \
        \  \"PK\": $util.dynamodb.toDynamoDBJson($PK),\n      \"SK\": $util.dynamodb.toDynamoDBJson(\"\
        none\"),\n    },\n    \"update\" : {\n        \"expression\": \"$expression\"\
        \n        #if( !${expNames.isEmpty()} )\n        , \"expressionNames\": $utils.toJson($expNames)\n\
        \        #end\n        #if( !${expValues.isEmpty()} )\n        , \"expressionValues\"\
        : $utils.toJson($expValues)\n        #end\n    }\n}"
      ResponseMappingTemplate: '$util.toJson($ctx.result)

        '
    Metadata:
      SamResourceId: UpdateDocumentResolver
  GetDocumentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: getDocument
      DataSourceName:
        Fn::GetAtt:
        - TrackingTableDataSource
        - Name
      RequestMappingTemplate: "#set( $PK = \"doc#${context.arguments.ObjectKey}\"\
        \ )\n{\n  \"version\": \"2018-05-29\",\n  \"operation\": \"GetItem\",\n  \"\
        key\" : {\n    \"PK\": $util.dynamodb.toDynamoDBJson($PK),\n    \"SK\": $util.dynamodb.toDynamoDBJson(\"\
        none\"),\n  }\n}\n"
      ResponseMappingTemplate: '$util.toJson($ctx.result)

        '
    Metadata:
      SamResourceId: GetDocumentResolver
  ListDocumentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listDocuments
      DataSourceName:
        Fn::GetAtt:
        - TrackingTableDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2018-05-29\",\n    \"operation\"\
        : \"Scan\",\n    \"filter\": {\n        #if($context.arguments.startDateTime\
        \ && $context.arguments.endDateTime)\n            \"expression\": \"InitialEventTime\
        \ BETWEEN :startDateTime AND :endDateTime\",\n            \"expressionValues\"\
        : {\n                \":startDateTime\": { \"S\": \"$context.arguments.startDateTime\"\
        \ },\n                \":endDateTime\": { \"S\": \"$context.arguments.endDateTime\"\
        \ }\n            }\n        #elseif($context.arguments.startDateTime)\n  \
        \          \"expression\": \"InitialEventTime >= :startDateTime\",\n     \
        \       \"expressionValues\": {\n                \":startDateTime\": { \"\
        S\": \"$context.arguments.startDateTime\" }\n            }\n        #elseif($context.arguments.endDateTime)\n\
        \            \"expression\": \"InitialEventTime <= :endDateTime\",\n     \
        \       \"expressionValues\": {\n                \":endDateTime\": { \"S\"\
        : \"$context.arguments.endDateTime\" }\n            }\n        #end\n    },\n\
        \    #if($context.prev.result)\n        \"nextToken\": \"$context.prev.result.nextToken\"\
        ,\n    #end\n    \"limit\": 50,\n    \"consistentRead\": false,\n    \"select\"\
        : \"ALL_ATTRIBUTES\"\n}\n"
      ResponseMappingTemplate: "{\n    \"Documents\": $util.toJson($ctx.result.items),\n\
        \    \"nextToken\": $util.toJson($ctx.result.nextToken)\n}\n"
    Metadata:
      SamResourceId: ListDocumentResolver
  ListDocumentDateHourResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listDocumentsDateHour
      DataSourceName:
        Fn::GetAtt:
        - TrackingTableDataSource
        - Name
      RequestMappingTemplate: "#set( $shardsInDay = 6 )\n#set( $shardDivider = 24\
        \ / $shardsInDay )\n#set( $Integer = 0 )\n#set( $now = $util.time.nowISO8601()\
        \ )\n#set( $hourNow = $Integer.parseInt($now.substring(11, 13)) )\n#set( $date\
        \ = $util.defaultIfNullOrBlank($ctx.args.date, $now.substring(0, 10)) )\n\
        #set( $hour = $util.defaultIfNull($ctx.args.hour, $hourNow) )\n#if( $hour\
        \ < 0 || $hour > 23 )\n  $util.error(\"Invalid hour parameter - value should\
        \ be between 0 and 23\")\n#end\n#set( $hourPad = $date.format(\"%02d\", $hour)\
        \ )\n#set( $hourShard = $hour / $shardDivider )\n#set( $shardPad = $date.format(\"\
        %02d\", $hourShard) )\n\n#set( $PK = \"list#${date}#s#${shardPad}\" )\n#set(\
        \ $skPrefix = \"ts#${date}T${hourPad}\" )\n\n{\n  \"version\" : \"2018-05-29\"\
        ,\n  \"operation\" : \"Query\",\n  \"query\" : {\n    \"expression\": \"PK\
        \ = :PK and begins_with(SK, :prefix)\",\n    \"expressionValues\": {\n   \
        \   \":PK\": $util.dynamodb.toDynamoDBJson($PK),\n      \":prefix\": $util.dynamodb.toDynamoDBJson($skPrefix),\n\
        \    },\n  },\n}\n"
      ResponseMappingTemplate: "{\n    \"Documents\": $util.toJson($ctx.result.items),\n\
        \    \"nextToken\": $util.toJson($ctx.result.nextToken)\n}\n"
    Metadata:
      SamResourceId: ListDocumentDateHourResolver
  ListDocumentDateShardResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listDocumentsDateShard
      DataSourceName:
        Fn::GetAtt:
        - TrackingTableDataSource
        - Name
      RequestMappingTemplate: "#set( $shardsInDay = 6 )\n#set( $shardDivider = 24\
        \ / $shardsInDay )\n#set( $Integer = 0 )\n#set( $now = $util.time.nowISO8601()\
        \ )\n#set( $hourNow = $Integer.parseInt($now.substring(11, 13)) )\n#set( $shardNow\
        \ = $hourNow / $shardDivider )\n#set( $date = $util.defaultIfNullOrBlank($ctx.args.date,\
        \ $now.substring(0, 10)) )\n#set( $shard = $util.defaultIfNull($ctx.args.shard,\
        \ $shardNow) )\n#if( $shard >= $shardsInDay )\n  $util.error(\"Invalid shard\
        \ parameter value - must positive and less than ${shardsInDay}\")\n#end\n\
        #set( $hourShard = $hour / $shardDivider )\n#set( $shardPad = $date.format(\"\
        %02d\", $shard) )\n\n#set( $PK = \"list#${date}#s#${shardPad}\" )\n\n{\n \
        \ \"version\" : \"2018-05-29\",\n  \"operation\" : \"Query\",\n  \"query\"\
        \ : {\n    \"expression\": \"PK = :PK\",\n    \"expressionValues\": {\n  \
        \    \":PK\": $util.dynamodb.toDynamoDBJson($PK),\n    }\n  }\n}\n"
      ResponseMappingTemplate: "{\n    \"Documents\": $util.toJson($ctx.result.items),\n\
        \    \"nextToken\": $util.toJson($ctx.result.nextToken)\n}\n"
    Metadata:
      SamResourceId: ListDocumentDateShardResolver
  GetFileContentsResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: GetFileContentsResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/51132f08799d8c0038f0a4a21e86ec02
      Description: Lambda function to return file contents via GraphQL API
      MemorySize: 512
      Timeout: 60
      LoggingConfig:
        LogGroup:
          Ref: GetFileContentsResolverFunctionLogGroup
      Policies:
      - S3ReadPolicy:
          BucketName:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
      - S3ReadPolicy:
          BucketName:
            Ref: InputBucket
      - S3ReadPolicy:
          BucketName:
            Ref: ConfigurationBucket
      - S3ReadPolicy:
          BucketName:
            Ref: OutputBucket
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  GetFileContentsResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: GetFileContentsResolverFunctionLogGroup
  GetFileContentsDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: GetFileContents
      Description: Lambda function to return file contents via GraphQL API
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - GetFileContentsResolverFunction
          - Arn
    Metadata:
      SamResourceId: GetFileContentsDataSource
  GetFileContentsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - GetFileContentsDataSource
        - Name
      TypeName: Query
      FieldName: getFileContents
    Metadata:
      SamResourceId: GetFileContentsResolver
  GetStepFunctionExecutionResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: GetStepFunctionExecutionResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W58
          reason: DLQ not required for AppSync resolver function as GraphQL handles
            retries
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/dffae6ff607fe9db03a7bf9e33ea0009
      Handler: index.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      MemorySize: 512
      Timeout: 60
      LoggingConfig:
        LogGroup:
          Ref: GetStepFunctionExecutionResolverFunctionLogGroup
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - states:DescribeExecution
          - states:GetExecutionHistory
          Resource:
          - Fn::Sub:
            - arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:execution:${StateMachineName}*
            - StateMachineName:
                Fn::If:
                - IsPattern3
                - Fn::GetAtt:
                  - PATTERN3STACK
                  - Outputs.StateMachineName
                - Fn::If:
                  - IsPattern2
                  - Fn::GetAtt:
                    - PATTERN2STACK
                    - Outputs.StateMachineName
                  - Fn::GetAtt:
                    - PATTERN1STACK
                    - Outputs.StateMachineName
      - KMSDecryptPolicy:
          KeyId:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  GetStepFunctionExecutionResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: GetStepFunctionExecutionResolverFunctionLogGroup
  GetStepFunctionExecutionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: GetStepFunctionExecution
      Description: Lambda function to return Step Functions execution details via
        GraphQL API
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - GetStepFunctionExecutionResolverFunction
          - Arn
    Metadata:
      SamResourceId: GetStepFunctionExecutionDataSource
  GetStepFunctionExecutionResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - GetStepFunctionExecutionDataSource
        - Name
      TypeName: Query
      FieldName: getStepFunctionExecution
    Metadata:
      SamResourceId: GetStepFunctionExecutionResolver
  ConfigurationResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ConfigurationResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/22e1b10960364a11926fa9a1dab5688b
      Description: Lambda function to manage configuration through GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
          CONFIGURATION_QUEUE_URL:
            Ref: ConfigurationQueue
          STACK_NAME:
            Ref: AWS::StackName
      LoggingConfig:
        LogGroup:
          Ref: ConfigurationResolverFunctionLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConfigurationTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - ConfigurationQueue
            - QueueName
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - ssm:GetParameter
          - ssm:PutParameter
          Resource:
            Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FlowDefinitionArn
  ConfigurationResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: ConfigurationResolverFunctionLogGroup
  ConfigurationDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: ConfigurationDataSource
      Description: Lambda function to manage configuration via GraphQL API
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - ConfigurationResolverFunction
          - Arn
    Metadata:
      SamResourceId: ConfigurationDataSource
  GetConfigurationResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - ConfigurationDataSource
        - Name
      TypeName: Query
      FieldName: getConfiguration
    Metadata:
      SamResourceId: GetConfigurationResolver
  UpdateConfigurationResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - ConfigurationDataSource
        - Name
      TypeName: Mutation
      FieldName: updateConfiguration
    Metadata:
      SamResourceId: UpdateConfigurationResolver
  CopyToBaselineResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: CopyToBaselineResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/ab61d8b156c3549e29b124e158330806
      Description: Lambda function to copy files to baseline bucket via GraphQL API
      MemorySize: 512
      Timeout: 300
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          OUTPUT_BUCKET:
            Ref: OutputBucket
          EVALUATION_BASELINE_BUCKET:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      LoggingConfig:
        LogGroup:
          Ref: CopyToBaselineResolverFunctionLogGroup
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: OutputBucket
      - S3CrudPolicy:
          BucketName:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
      - Statement:
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          Resource:
            Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-CopyToBaseline*
      - Statement:
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
  CopyToBaselineResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: CopyToBaselineResolverFunctionLogGroup
  CopyToBaselineDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: CopyToBaselineDataSource
      Description: Lambda function for copying files to baseline bucket
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - CopyToBaselineResolverFunction
          - Arn
    Metadata:
      SamResourceId: CopyToBaselineDataSource
  CopyToBaselineResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - CopyToBaselineDataSource
        - Name
      TypeName: Mutation
      FieldName: copyToBaseline
    Metadata:
      SamResourceId: CopyToBaselineResolver
  DeleteDocumentResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: DeleteDocumentResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/4258e8ebc3c5d9e2c8de93983d91f3c3
      Description: Lambda function to delete documents via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          TRACKING_TABLE_NAME:
            Ref: TrackingTable
          INPUT_BUCKET:
            Ref: InputBucket
          OUTPUT_BUCKET:
            Ref: OutputBucket
      LoggingConfig:
        LogGroup:
          Ref: DeleteDocumentResolverFunctionLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - S3CrudPolicy:
          BucketName:
            Ref: InputBucket
      - S3CrudPolicy:
          BucketName:
            Ref: OutputBucket
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  DeleteDocumentResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: DeleteDocumentResolverFunctionLogGroup
  DeleteDocumentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: DeleteDocumentDataSource
      Description: Lambda function for deleting documents
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - DeleteDocumentResolverFunction
          - Arn
    Metadata:
      SamResourceId: DeleteDocumentDataSource
  DeleteDocumentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - DeleteDocumentDataSource
        - Name
      TypeName: Mutation
      FieldName: deleteDocument
    Metadata:
      SamResourceId: DeleteDocumentResolver
  ReprocessDocumentResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ReprocessDocumentResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/b8fc1e4aa4ddcc493d4604d9a5290d38
      Description: Lambda function to reprocess documents via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          INPUT_BUCKET:
            Ref: InputBucket
      LoggingConfig:
        LogGroup:
          Ref: ReprocessDocumentResolverFunctionLogGroup
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: InputBucket
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  ReprocessDocumentResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: ReprocessDocumentResolverFunctionLogGroup
  ReprocessDocumentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: ReprocessDocumentDataSource
      Description: Lambda function for reprocessing documents
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - ReprocessDocumentResolverFunction
          - Arn
    Metadata:
      SamResourceId: ReprocessDocumentDataSource
  ReprocessDocumentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - ReprocessDocumentDataSource
        - Name
      TypeName: Mutation
      FieldName: reprocessDocument
    Metadata:
      SamResourceId: ReprocessDocumentResolver
  UploadResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: UploadResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/777010f199a5c69ad412b7613dd43960
      Description: Lambda function to return signed upload URL via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          INPUT_BUCKET:
            Ref: InputBucket
      LoggingConfig:
        LogGroup:
          Ref: UploadResolverFunctionLogGroup
      Policies:
      - S3WritePolicy:
          BucketName:
            Ref: InputBucket
      - S3WritePolicy:
          BucketName:
            Ref: ConfigurationBucket
      - S3WritePolicy:
          BucketName:
            Ref: OutputBucket
      - S3WritePolicy:
          BucketName:
            Fn::If:
            - ShouldCreateEvaluationBaselineBucket
            - Ref: EvaluationBaselineBucket
            - Ref: EvaluationBaselineBucketName
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  UploadResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: UploadResolverFunctionLogGroup
  UploadResolverDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: UploadResolverDataSource
      Description: Lambda function for generating presigned URLs
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - UploadResolverFunction
          - Arn
    Metadata:
      SamResourceId: UploadResolverDataSource
  UploadDocumentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - UploadResolverDataSource
        - Name
      TypeName: Mutation
      FieldName: uploadDocument
    Metadata:
      SamResourceId: UploadDocumentResolver
  DiscoveryUploadResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: DiscoveryUploadResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/7e54a1452f7eefe7809523a4fa7b3c1d
      Description: Lambda function to handle discovery document uploads via GraphQL
        API
      MemorySize: 512
      Timeout: 120
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          DISCOVERY_BUCKET:
            Ref: DiscoveryBucket
          DISCOVERY_TRACKING_TABLE:
            Ref: DiscoveryTrackingTable
          DISCOVERY_QUEUE_URL:
            Ref: DiscoveryQueue
      LoggingConfig:
        LogGroup:
          Ref: DiscoveryUploadResolverFunctionLogGroup
      Policies:
      - S3WritePolicy:
          BucketName:
            Ref: DiscoveryBucket
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DiscoveryTrackingTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - DiscoveryQueue
            - QueueName
      - Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  DiscoveryUploadResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: DiscoveryUploadResolverFunctionLogGroup
  DiscoveryUploadResolverDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: DiscoveryUploadResolverDataSource
      Description: Lambda function for discovery document uploads
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - DiscoveryUploadResolverFunction
          - Arn
    Metadata:
      SamResourceId: DiscoveryUploadResolverDataSource
  DiscoveryUploadDocumentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - DiscoveryUploadResolverDataSource
        - Name
      TypeName: Mutation
      FieldName: uploadDiscoveryDocument
    Metadata:
      SamResourceId: DiscoveryUploadDocumentResolver
  DiscoveryJobsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Query
      FieldName: listDiscoveryJobs
      DataSourceName:
        Fn::GetAtt:
        - DiscoveryTableDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2018-05-29\",\n    \"operation\"\
        : \"Scan\",\n    \"limit\": 50,\n    \"consistentRead\": false,\n    \"select\"\
        : \"ALL_ATTRIBUTES\"\n}\n"
      ResponseMappingTemplate: "{\n    \"DiscoveryJobs\": $util.toJson($ctx.result.items),\n\
        \    \"nextToken\": $util.toJson($ctx.result.nextToken)\n}\n"
    Metadata:
      SamResourceId: DiscoveryJobsResolver
  UpdateDiscoveryJobStatusResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      TypeName: Mutation
      FieldName: updateDiscoveryJobStatus
      DataSourceName:
        Fn::GetAtt:
        - DiscoveryTableDataSource
        - Name
      RequestMappingTemplate: "## Validate status is one of the allowed values\n#set($validStatuses\
        \ = [\"PENDING\", \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\"])\n#if(!$validStatuses.contains($ctx.args.status))\n\
        \  $util.error(\"Invalid status value. Status must be one of: PENDING, IN_PROGRESS,\
        \ COMPLETED, FAILED\", \"ValidationException\")\n#end\n\n#set($expNames =\
        \ {})\n#set($expValues = {})\n\n## Set status (required)\n$util.qr($expNames.put(\"\
        #status\", \"status\"))\n$util.qr($expValues.put(\":status\", $util.dynamodb.toDynamoDB($ctx.args.status)))\n\
        #set($updateExpression = \"SET #status = :status\")\n\n## Set errorMessage\
        \ (optional)\n#if($ctx.args.errorMessage)\n  $util.qr($expNames.put(\"#errorMessage\"\
        , \"errorMessage\"))\n  $util.qr($expValues.put(\":errorMessage\", $util.dynamodb.toDynamoDB($ctx.args.errorMessage)))\n\
        \  #set($updateExpression = \"${updateExpression}, #errorMessage = :errorMessage\"\
        )\n#end\n\n## Set updatedAt to current timestamp\n$util.qr($expNames.put(\"\
        #updatedAt\", \"updatedAt\"))\n$util.qr($expValues.put(\":updatedAt\", $util.dynamodb.toDynamoDB($util.time.nowISO8601())))\n\
        #set($updateExpression = \"${updateExpression}, #updatedAt = :updatedAt\"\
        )\n\n## Set completedAt when status is COMPLETED or FAILED\n#if($ctx.args.status\
        \ == \"COMPLETED\" || $ctx.args.status == \"FAILED\")\n  $util.qr($expNames.put(\"\
        #completedAt\", \"completedAt\"))\n  $util.qr($expValues.put(\":completedAt\"\
        , $util.dynamodb.toDynamoDB($util.time.nowISO8601())))\n  #set($updateExpression\
        \ = \"${updateExpression}, #completedAt = :completedAt\")\n#end\n\n{\n  \"\
        version\": \"2018-05-29\",\n  \"operation\": \"UpdateItem\",\n  \"key\": {\n\
        \    \"jobId\": $util.dynamodb.toDynamoDBJson($ctx.args.jobId)\n  },\n  \"\
        update\": {\n    \"expression\": \"$updateExpression\",\n    \"expressionNames\"\
        : $utils.toJson($expNames),\n    \"expressionValues\": $utils.toJson($expValues)\n\
        \  }\n}"
      ResponseMappingTemplate: $util.toJson($ctx.result)
    Metadata:
      SamResourceId: UpdateDiscoveryJobStatusResolver
  DiscoveryProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: DiscoveryProcessorFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/62c562fe2536f10a418509577e0e9f10
      Description: Lambda function to process discovery jobs from SQS queue
      MemorySize: 1024
      Timeout: 120
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          DISCOVERY_BUCKET:
            Ref: DiscoveryBucket
          DISCOVERY_TRACKING_TABLE:
            Ref: DiscoveryTrackingTable
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      LoggingConfig:
        LogGroup:
          Ref: DiscoveryProcessorFunctionLogGroup
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - DiscoveryQueue
              - Arn
            BatchSize: 1
            FunctionResponseTypes:
            - ReportBatchItemFailures
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: DiscoveryBucket
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DiscoveryTrackingTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConfigurationTable
      - Statement:
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          Resource: '*'
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
  DiscoveryProcessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: DiscoveryProcessorFunctionLogGroup
  QueryKnowledgeBaseResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: QueryKnowledgeBaseResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/f5e7f25cd012ea2575312e5aa0474c6e
      Description: Lambda function to query Bedrock Knowledge Base via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          KB_ID:
            Fn::If:
            - ShouldUseDocumentKnowledgeBase
            - Fn::GetAtt:
              - DOCUMENTKB
              - Outputs.KnowledgeBaseID
            - ''
          KB_ACCOUNT_ID:
            Ref: AWS::AccountId
          KB_REGION:
            Ref: AWS::Region
          MODEL_ID:
            Ref: KnowledgeBaseModelId
          GUARDRAIL_ID_AND_VERSION:
            Fn::If:
            - HasGuardrailConfig
            - Fn::Sub: ${BedrockGuardrailId}:${BedrockGuardrailVersion}
            - ''
      LoggingConfig:
        LogGroup:
          Ref: QueryKnowledgeBaseResolverFunctionLogGroup
      Policies:
      - Statement:
        - Fn::If:
          - ShouldUseDocumentKnowledgeBase
          - Effect: Allow
            Action:
            - bedrock:Retrieve
            - bedrock:RetrieveAndGenerate
            Resource:
              Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/${DOCUMENTKB.Outputs.KnowledgeBaseID}
          - Ref: AWS::NoValue
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
        - Effect: Allow
          Action:
          - bedrock:GetInferenceProfile
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
        - Fn::If:
          - HasGuardrailConfig
          - Effect: Allow
            Action:
            - bedrock:ApplyGuardrail
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}
          - Ref: AWS::NoValue
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  QueryKnowledgeBaseResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: QueryKnowledgeBaseResolverFunctionLogGroup
  QueryKnowledgeBaseDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: QueryKnowledgeBase
      Description: Lambda function to query Bedrock Knowledge Base
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - QueryKnowledgeBaseResolverFunction
          - Arn
    Metadata:
      SamResourceId: QueryKnowledgeBaseDataSource
  QueryKnowledgeBaseResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - QueryKnowledgeBaseDataSource
        - Name
      TypeName: Query
      FieldName: queryKnowledgeBase
    Metadata:
      SamResourceId: QueryKnowledgeBaseResolver
  ChatWithDocumentResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ChatWithDocumentResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/9f5967874ce7d655f275614d0b43171e
      Description: Lambda function to chat with the document via GraphQL API
      MemorySize: 512
      Timeout: 120
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          OUTPUT_BUCKET:
            Ref: OutputBucket
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationTable
          TRACKING_TABLE_NAME:
            Ref: TrackingTable
          GUARDRAIL_ID_AND_VERSION:
            Fn::If:
            - HasGuardrailConfig
            - Fn::Sub: ${BedrockGuardrailId}:${BedrockGuardrailVersion}
            - ''
      LoggingConfig:
        LogGroup:
          Ref: ChatWithDocumentResolverFunctionLogGroup
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: OutputBucket
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ConfigurationTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - Statement:
        - Fn::If:
          - ShouldUseDocumentKnowledgeBase
          - Effect: Allow
            Action:
            - bedrock:Retrieve
            - bedrock:RetrieveAndGenerate
            Resource:
              Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/${DOCUMENTKB.Outputs.KnowledgeBaseID}
          - Ref: AWS::NoValue
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          Resource: '*'
        - Effect: Allow
          Action:
          - bedrock:GetInferenceProfile
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
        - Fn::If:
          - HasGuardrailConfig
          - Effect: Allow
            Action:
            - bedrock:ApplyGuardrail
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}
          - Ref: AWS::NoValue
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  ChatWithDocumentResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: ChatWithDocumentResolverFunctionLogGroup
  ProcessChangesResolverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ProcessChangesResolverFunction
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
        - id: W12
          reason: Lambda requires CloudWatch logs permissions
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Handler: index.handler
      Runtime: python3.12
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/3e5ef0c66747f98fbeed39f558de532a
      Description: Lambda function to process section changes via GraphQL API
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL:
            Ref: LogLevel
          TRACKING_TABLE:
            Ref: TrackingTable
          QUEUE_URL:
            Ref: DocumentQueue
          DATA_RETENTION_IN_DAYS:
            Ref: DataRetentionInDays
          WORKING_BUCKET:
            Ref: WorkingBucket
          INPUT_BUCKET:
            Ref: InputBucket
          OUTPUT_BUCKET:
            Ref: OutputBucket
          APPSYNC_API_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      LoggingConfig:
        LogGroup:
          Ref: ProcessChangesResolverFunctionLogGroup
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TrackingTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - DocumentQueue
            - QueueName
      - S3CrudPolicy:
          BucketName:
            Ref: OutputBucket
      - S3CrudPolicy:
          BucketName:
            Ref: WorkingBucket
      - Statement:
        - Effect: Allow
          Action:
          - appsync:GraphQL
          Resource:
          - Fn::Sub: ${GraphQLApi.Arn}/types/Mutation/*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - CustomerManagedEncryptionKey
            - Arn
  ProcessChangesResolverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: ProcessChangesResolverFunctionLogGroup
  ProcessChangesDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: ProcessChangesDataSource
      Description: Lambda function for processing section changes
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - ProcessChangesResolverFunction
          - Arn
    Metadata:
      SamResourceId: ProcessChangesDataSource
  ProcessChangesResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - ProcessChangesDataSource
        - Name
      TypeName: Mutation
      FieldName: processChanges
    Metadata:
      SamResourceId: ProcessChangesResolver
  ChatWithDocumentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: ChatWithDocument
      Description: Lambda function to chat with document
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - ChatWithDocumentResolverFunction
          - Arn
    Metadata:
      SamResourceId: ChatWithDocumentDataSource
  ChatWithDocumentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DataSourceName:
        Fn::GetAtt:
        - ChatWithDocumentDataSource
        - Name
      TypeName: Query
      FieldName: chatWithDocument
    Metadata:
      SamResourceId: ChatWithDocumentResolver
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Sub: ${AWS::StackName} CloudFront OAI for ${WebUIBucket}
    Metadata:
      SamResourceId: CloudFrontOriginAccessIdentity
  SecurityHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name:
          Fn::Sub: ${AWS::StackName}-security-headers-policy
        Comment: Security headers policy
        SecurityHeadersConfig:
          ContentSecurityPolicy:
            Override: true
            ContentSecurityPolicy: 'script-src ''self'' ''unsafe-inline'' ''unsafe-eval''
              https:; object-src ''self'' blob: data: https:; base-uri ''none''; frame-ancestors
              ''self''; form-action ''self''; img-src ''self'' data: https:; style-src
              ''self'' ''unsafe-inline'' https:; connect-src ''self'' https: wss://*.amazonaws.com
              wss://*.appsync-realtime-api.*.amazonaws.com wss://*.execute-api.*.amazonaws.com
              ws://localhost:*;'
          StrictTransportSecurity:
            Override: true
            AccessControlMaxAgeSec: 31536000
            IncludeSubdomains: true
            Preload: false
          ContentTypeOptions:
            Override: true
          FrameOptions:
            Override: true
            FrameOption: SAMEORIGIN
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: strict-origin-when-cross-origin
    Metadata:
      SamResourceId: SecurityHeadersPolicy
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W70
          reason: Minimum TLS version is determined by CloudFrontDefaultCertificate
            true
      SamResourceId: CloudFrontDistribution
    Properties:
      DistributionConfig:
        Comment:
          Fn::Sub: Web app cloudfront distribution ${AWS::StackName}
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        Logging:
          Bucket:
            Fn::Sub: ${LoggingBucket}.s3.${AWS::URLSuffix}
          Prefix: cloudfront-logs
          IncludeCookies: true
        CustomErrorResponses:
        - ErrorCachingMinTTL: 300
          ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        - ErrorCachingMinTTL: 300
          ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: webapp-s3-bucket
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 600
          MinTTL: 300
          MaxTTL: 900
          ResponseHeadersPolicyId:
            Ref: SecurityHeadersPolicy
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
        - Id: webapp-s3-bucket
          DomainName:
            Fn::GetAtt:
            - WebUIBucket
            - RegionalDomainName
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        PriceClass:
          Ref: CloudFrontPriceClass
        Restrictions:
          Fn::If:
          - ShouldEnableGeoRestriction
          - GeoRestriction:
              RestrictionType: whitelist
              Locations:
                Fn::Split:
                - ','
                - Ref: CloudFrontAllowedGeos
          - GeoRestriction:
              RestrictionType: none
  UICodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: codebuild.${AWS::URLSuffix}
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1
            - Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/*
            Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketAcl
            - s3:GetBucketLocation
            - s3:PutObject
            - s3:ListBucket
          - Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*
            Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${WebUIBucket}/*
          - Effect: Allow
            Action:
            - cloudfront:CreateInvalidation
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}
    Metadata:
      SamResourceId: UICodeBuildServiceRole
  UICodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-webui-build
      Description:
        Fn::Sub: Web UI build for GenAIIDP stack - ${AWS::StackName}
      ServiceRole:
        Ref: UICodeBuildServiceRole
      EncryptionKey: alias/aws/s3
      Artifacts:
        Type: NO_ARTIFACTS
      Source:
        Location:
          Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/src-73f78e222980c975.zip
        Type: S3
        BuildSpec: "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - echo\
          \ ${SOURCE_CODE_LOCATION}\n      - echo `ls -altr`\n      - echo `pwd`\n\
          \      - echo Installing NodeJS\n      - n 22.14.0\n      - npm install\
          \ -g npm@11.1.0\n      - echo Installing Web UI dependencies\n      - rm\
          \ -rf node_modules\n      - npm cache clean --force\n      - npm ci\n  \
          \    - echo Checking for and fixing security vulnerabilities\n      - npm\
          \ audit fix || echo \"Some vulnerabilities could not be automatically fixed\"\
          \n  build:\n    commands:\n      - echo Build started on `date`\n      -\
          \ cd $CODEBUILD_SRC_DIR\n      - echo Building Web UI\n      - npm run build\n\
          \      - >\n        printf '{\"RepositoryUri\":\"%s\",\"ProjectName\":\"\
          %s\",\"ArtifactBucket\":\"%s\"}'\n        $REPOSITORY_URI $PROJECT_NAME\
          \ $ARTIFACT_BUCKET > build.json\n  post_build:\n    commands:\n      - echo\
          \ Build completed on `date`\n      - echo Copying Web UI\n      - find build\
          \ -ls\n      - aws s3 cp --recursive build s3://${WEBAPP_BUCKET}/\n    \
          \  - echo Invalidating CloudFront Distribution\n      - >\n        aws cloudfront\
          \ create-invalidation\n        --distribution-id \"$CLOUDFRONT_DISTRIBUTION_ID\"\
          \ --paths '/*'\nartifacts:\n  files:\n    - build.json\n"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: AWS_DEFAULT_REGION
          Value:
            Ref: AWS::Region
        - Name: AWS_ACCOUNT_ID
          Value:
            Ref: AWS::AccountId
        - Name: SOURCE_CODE_LOCATION
          Value:
            Fn::Sub: aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17
        - Name: WEBAPP_BUCKET
          Value:
            Ref: WebUIBucket
        - Name: CLOUDFRONT_DISTRIBUTION_ID
          Value:
            Ref: CloudFrontDistribution
        - Name: REACT_APP_SETTINGS_PARAMETER
          Value:
            Ref: SettingsParameter
        - Name: REACT_APP_USER_POOL_ID
          Value:
            Ref: UserPool
        - Name: REACT_APP_USER_POOL_CLIENT_ID
          Value:
            Ref: UserPoolClient
        - Name: REACT_APP_IDENTITY_POOL_ID
          Value:
            Ref: IdentityPool
        - Name: REACT_APP_APPSYNC_GRAPHQL_URL
          Value:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
        - Name: REACT_APP_AWS_REGION
          Value:
            Ref: AWS::Region
        - Name: REACT_APP_SHOULD_HIDE_SIGN_UP
          Value:
            Fn::If:
            - ShouldAllowSignUpEmailDomain
            - 'false'
            - 'true'
        - Name: REACT_APP_CLOUDFRONT_DOMAIN
          Value:
            Fn::Sub: https://${CloudFrontDistribution.DomainName}/
      TimeoutInMinutes: 30
    Metadata:
      SamResourceId: UICodeBuildProject
  StartUICodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W11
          reason: Role requires * resource access for CloudWatch Logs and CloudFormation
            custom resource operations
      SamResourceId: StartUICodeBuildExecutionRole
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: lambda.${AWS::URLSuffix}
          Action:
          - sts:AssumeRole
      Path: /
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            Resource:
              Fn::GetAtt:
              - UICodeBuildProject
              - Arn
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
      - PolicyName: CustomResourcePoller
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - events:PutRule
            - events:DeleteRule
            - events:PutTargets
            - events:RemoveTargets
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/*
          - Effect: Allow
            Action:
            - lambda:AddPermission
            - lambda:RemovePermission
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:*
  StartUICodeBuild:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: StartUICodeBuild
      cfn_nag:
        rules_to_suppress:
        - id: W89
          reason: Function does not require VPC access as it only interacts with AWS
            services via APIs
        - id: W92
          reason: Function does not require reserved concurrency as it scales based
            on demand
    Properties:
      PermissionsBoundary:
        Fn::If:
        - HasPermissionsBoundary
        - Ref: PermissionsBoundaryArn
        - Ref: AWS::NoValue
      Role:
        Fn::GetAtt:
        - StartUICodeBuildExecutionRole
        - Arn
      Runtime: python3.12
      Timeout: 60
      MemorySize: 128
      Handler: index.handler
      CodeUri: s3://aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/5e814a3e1514e3f6f44f260b381717c3
      Description: This AWS Lambda Function kicks off a code build job.
      LoggingConfig:
        LogGroup:
          Ref: StartUICodeBuildLogGroup
  StartUICodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId:
        Fn::GetAtt:
        - CustomerManagedEncryptionKey
        - Arn
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      SamResourceId: StartUICodeBuildLogGroup
  CodeBuildRun:
    Type: Custom::CodeBuildRun
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - StartUICodeBuild
        - Arn
      BuildProjectName:
        Ref: UICodeBuildProject
      SettingsParameter:
        Ref: SettingsParameter
      CodeLocation:
        Fn::Sub: arn:${AWS::Partition}:s3:::aws-ml-blog-us-east-1/artifacts/genai-idp/0.3.17/src-73f78e222980c975.zip
    Metadata:
      SamResourceId: CodeBuildRun
Outputs:
  ApplicationWebURL:
    Description: Application Web URL
    Value:
      Fn::Sub: https://${CloudFrontDistribution.DomainName}/
  SageMakerA2IReviewPortalURL:
    Description: SageMaker HITL Review portal URL
    Condition: IsHITLEnabled
    Value:
      Fn::GetAtt:
      - WorkforceURLResource
      - PortalURL
  PrivateWorkteamArn:
    Description: SageMaker A2I Private Workteam ARN (use this ARN when deploying additional
      patterns with HITL enabled)
    Condition: IsHITLEnabled
    Value:
      Fn::If:
      - ShouldCreatePrivateWorkteam
      - Fn::Sub: arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:workteam/private-crowd/${PrivateWorkteam.WorkteamName}
      - Ref: ExistingPrivateWorkforceArn
  LabelingConsoleURL:
    Description: SageMaker Ground Truth console URL
    Condition: IsHITLEnabled
    Value:
      Fn::GetAtt:
      - WorkforceURLResource
      - ConsoleURL
  S3InstallBucket:
    Description: Install S3 bucket name
    Value:
      Ref: InputBucket
  S3LoggingBucket:
    Description: Logging S3 bucket name
    Value:
      Ref: LoggingBucket
  S3WebUIBucket:
    Description: WebUI S3 bucket name
    Value:
      Ref: WebUIBucket
  S3InputBucketName:
    Description: Input S3 bucket name
    Value:
      Ref: InputBucket
  S3DiscoveryBucketName:
    Description: Discovery S3 bucket name
    Value:
      Ref: DiscoveryBucket
  S3InputBucketConsoleURL:
    Description: Input S3 bucket console URL
    Value:
      Fn::Sub: https://s3.console.aws.amazon.com/s3/buckets/${InputBucket}
  S3DiscoveryBucketConsoleURL:
    Description: Discovery S3 bucket console URL
    Value:
      Fn::Sub: https://s3.console.aws.amazon.com/s3/buckets/${DiscoveryBucket}
  S3OutputBucketName:
    Description: Output S3 bucket name
    Value:
      Ref: OutputBucket
  S3OutputBucketConsoleURL:
    Description: Output S3 bucket console URL
    Value:
      Fn::Sub: https://s3.console.aws.amazon.com/s3/buckets/${OutputBucket}
  S3ReportingBucketName:
    Description: Reporting S3 bucket name
    Value:
      Fn::If:
      - ShouldCreateReportingBucket
      - Ref: ReportingBucket
      - Ref: ReportingBucketName
  S3ReportingBucketConsoleURL:
    Description: Reporting S3 bucket console URL
    Value:
      Fn::Sub:
      - https://s3.console.aws.amazon.com/s3/buckets/${Bucket}
      - Bucket:
          Fn::If:
          - ShouldCreateReportingBucket
          - Ref: ReportingBucket
          - Ref: ReportingBucketName
  ReportingDatabase:
    Description: AWS Glue database containing evaluation metrics tables (document_evaluations,
      section_evaluations, attribute_evaluations) that can be queried with Amazon
      Athena for analytics and reporting
    Value:
      Ref: ReportingDatabase
  S3EvaluationBaselineBucketName:
    Description: Evaluation Baseline S3 bucket name
    Value:
      Fn::If:
      - ShouldCreateEvaluationBaselineBucket
      - Ref: EvaluationBaselineBucket
      - Ref: EvaluationBaselineBucketName
  S3EvaluationBaselineBucketConsoleURL:
    Description: Evaluation Baseline S3 bucket console URL
    Value:
      Fn::Sub:
      - https://s3.console.aws.amazon.com/s3/buckets/${Bucket}
      - Bucket:
          Fn::If:
          - ShouldCreateEvaluationBaselineBucket
          - Ref: EvaluationBaselineBucket
          - Ref: EvaluationBaselineBucketName
  S3ConfigurationBucketName:
    Description: Configuration S3 bucket name
    Value:
      Ref: ConfigurationBucket
  S3ConfigurationBucketConsoleURL:
    Description: Configuration S3 bucket console URL
    Value:
      Fn::Sub: https://s3.console.aws.amazon.com/s3/buckets/${ConfigurationBucket}
  StateMachineArn:
    Description: Step Functions State machine ARN
    Value:
      Fn::If:
      - IsPattern3
      - Fn::GetAtt:
        - PATTERN3STACK
        - Outputs.StateMachineArn
      - Fn::If:
        - IsPattern2
        - Fn::GetAtt:
          - PATTERN2STACK
          - Outputs.StateMachineArn
        - Fn::GetAtt:
          - PATTERN1STACK
          - Outputs.StateMachineArn
  StateMachineConsoleURL:
    Description: Step Functions State machine console URL
    Value:
      Fn::Sub:
      - https://${AWS::Region}.console.aws.amazon.com/states/home?region=${AWS::Region}#/statemachines/view/${StateMachineArn}
      - StateMachineArn:
          Fn::If:
          - IsPattern3
          - Fn::GetAtt:
            - PATTERN3STACK
            - Outputs.StateMachineArn
          - Fn::If:
            - IsPattern2
            - Fn::GetAtt:
              - PATTERN2STACK
              - Outputs.StateMachineArn
            - Fn::GetAtt:
              - PATTERN1STACK
              - Outputs.StateMachineArn
  CWDashboardConsoleName:
    Description: Name of the merged CloudWatch dashboard
    Value:
      Fn::GetAtt:
      - MergedDashboard
      - DashboardName
  CWDashboardConsoleURL:
    Description: URL of the merged CloudWatch dashboard
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${MergedDashboard.DashboardName}
  SNSAlertsTopicARN:
    Description: SNS Topic ARN for alerts
    Value:
      Ref: AlertsTopic
  SNSAlertsTopicConsoleURL:
    Description: SNS Topic console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/sns/v3/home?region=${AWS::Region}#/topic/${AlertsTopic}
  DynamoDBTrackingTableConsoleURL:
    Description: DynamoDB table console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=${AWS::Region}#item-explorer?maximize=true&operation=QUERY&table=${TrackingTable}
  DynamoDBConcurrencyTableConsoleURL:
    Description: DynamoDB table console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=${AWS::Region}#item-explorer?maximize=true&operation=QUERY&table=${ConcurrencyTable}
  DynamoDBConfigurationTableConsoleURL:
    Description: DynamoDB table console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=${AWS::Region}#item-explorer?maximize=true&operation=QUERY&table=${ConfigurationTable}
  DynamoDBAgentTableName:
    Description: Name of the DynamoDB table for agent job tracking
    Value:
      Ref: AgentTable
  DynamoDBAgentTableConsoleURL:
    Description: DynamoDB table console URL for agent job tracking
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=${AWS::Region}#item-explorer?maximize=true&operation=QUERY&table=${AgentTable}
  LambdaLookupFunctionName:
    Description: Name of the Lookup function
    Value:
      Ref: LookupFunction
  LambdaLookupFunctionConsoleURL:
    Description: Lambda function console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${LookupFunction}
  SQSDocumentQueueUrl:
    Description: SQS Queue URL
    Value:
      Ref: DocumentQueue
  SQSDocumentQueueConsoleURL:
    Description: SQS Queue console URL
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/sqs/v2/home?region=${AWS::Region}#/queues/${DocumentQueue}
  WebUITestEnvFile:
    Description: Copy to create .env file for local UI testing
    Value:
      Fn::Sub: 'REACT_APP_USER_POOL_ID=${UserPool}

        REACT_APP_USER_POOL_CLIENT_ID=${UserPoolClient}

        REACT_APP_IDENTITY_POOL_ID=${IdentityPool}

        REACT_APP_APPSYNC_GRAPHQL_URL=${GraphQLApi.GraphQLUrl}

        REACT_APP_AWS_REGION=${AWS::Region}

        REACT_APP_SETTINGS_PARAMETER=${SettingsParameter}'
  ExternalMCPAgentsSecretConsoleURL:
    Description: External MCP Agents secret console URL - configure MCP server credentials
      here (JSON array format)
    Value:
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/secretsmanager/secret?name=${AWS::StackName}/external-mcp-agents/credentials&region=${AWS::Region}
